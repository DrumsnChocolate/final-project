/bin/bash: /home/s1952889/miniconda3/envs/prompt/lib/libtinfo.so.6: no version information available (required by /bin/bash)
12/10 16:07:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 833734879
    GPU 0: NVIDIA A40
    CUDA_HOME: None
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 833734879
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

12/10 16:07:22 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/cbis/cbis-linked'
dataset_type = 'CBISBinaryDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = 'work_dirs/setr_vit-l_pup_8xb2-160k_cbis-ddsm-binary-512x512/20231207_151546/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[
        dict(
            act_cfg=dict(type='ReLU'),
            align_corners=False,
            channels=256,
            dropout_ratio=0,
            in_channels=1024,
            in_index=0,
            kernel_size=3,
            loss_decode=dict(
                loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
            norm_cfg=dict(requires_grad=True, type='SyncBN'),
            num_classes=2,
            num_convs=2,
            type='SETRUPHead'),
        dict(
            act_cfg=dict(type='ReLU'),
            align_corners=False,
            channels=256,
            dropout_ratio=0,
            in_channels=1024,
            in_index=1,
            kernel_size=3,
            loss_decode=dict(
                loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
            norm_cfg=dict(requires_grad=True, type='SyncBN'),
            num_classes=2,
            num_convs=2,
            type='SETRUPHead'),
        dict(
            act_cfg=dict(type='ReLU'),
            align_corners=False,
            channels=256,
            dropout_ratio=0,
            in_channels=1024,
            in_index=2,
            kernel_size=3,
            loss_decode=dict(
                loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
            norm_cfg=dict(requires_grad=True, type='SyncBN'),
            num_classes=2,
            num_convs=2,
            type='SETRUPHead'),
    ],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            512,
            512,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_large_p16.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=24,
        out_indices=(
            9,
            14,
            19,
            23,
        ),
        patch_size=16,
        type='VisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=3,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=2,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_classes = 2
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=10.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = True
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/test', seg_map_path='annotations_binary/test'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='CBISBinaryDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/train', seg_map_path='annotations_binary/train'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=False, type='LoadAnnotations'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackSegInputs'),
        ],
        type='CBISBinaryDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_log_dir = 'work_dirs/setr_vit-l_pup_8xb2-160k_cbis-ddsm-binary-512x512/20231207_151546'
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=False, type='LoadAnnotations'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = None
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/val', seg_map_path='annotations_binary/val'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='CBISBinaryDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='Resize'),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/setr_vit-l_pup_8xb2-160k_cbis-ddsm-binary-512x512/20231207_151546/test'

/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/decode_heads/decode_head.py:120: UserWarning: For binary segmentation, we suggest using`out_channels = 1` to define the outputchannels of segmentor, and use `threshold`to convert `seg_logits` into a predictionapplying a threshold
  warnings.warn('For binary segmentation, we suggest using'
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:249: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
12/10 16:07:52 - mmengine - INFO - Total parameters: 317137928
12/10 16:07:52 - mmengine - INFO - Trainable parameters: 317137928
12/10 16:07:54 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:61: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
12/10 16:07:54 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
12/10 16:08:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: work_dirs/setr_vit-l_pup_8xb2-160k_cbis-ddsm-binary-512x512/20231207_151546/iter_160000.pth
12/10 16:09:38 - mmengine - INFO - Load checkpoint from work_dirs/setr_vit-l_pup_8xb2-160k_cbis-ddsm-binary-512x512/20231207_151546/iter_160000.pth
12/10 16:10:20 - mmengine - INFO - Iter(test) [ 50/645]    eta: 0:08:24  time: 0.1843  data_time: 0.0615  memory: 2629  
12/10 16:10:28 - mmengine - INFO - Iter(test) [100/645]    eta: 0:04:31  time: 0.1745  data_time: 0.1119  memory: 2427  
12/10 16:10:34 - mmengine - INFO - Iter(test) [150/645]    eta: 0:03:05  time: 0.1679  data_time: 0.1036  memory: 2352  
12/10 16:10:41 - mmengine - INFO - Iter(test) [200/645]    eta: 0:02:19  time: 0.1195  data_time: 0.0696  memory: 2626  
12/10 16:10:47 - mmengine - INFO - Iter(test) [250/645]    eta: 0:01:49  time: 0.1074  data_time: 0.0465  memory: 2456  
12/10 16:10:57 - mmengine - INFO - Iter(test) [300/645]    eta: 0:01:31  time: 0.3086  data_time: 0.2363  memory: 2709  
12/10 16:11:05 - mmengine - INFO - Iter(test) [350/645]    eta: 0:01:13  time: 0.1399  data_time: 0.0834  memory: 2915  
12/10 16:11:13 - mmengine - INFO - Iter(test) [400/645]    eta: 0:00:58  time: 0.3047  data_time: 0.2237  memory: 2631  
12/10 16:11:20 - mmengine - INFO - Iter(test) [450/645]    eta: 0:00:44  time: 0.1171  data_time: 0.0526  memory: 2575  
12/10 16:11:27 - mmengine - INFO - Iter(test) [500/645]    eta: 0:00:31  time: 0.1282  data_time: 0.0672  memory: 2755  
12/10 16:11:36 - mmengine - INFO - Iter(test) [550/645]    eta: 0:00:20  time: 0.1847  data_time: 0.1103  memory: 3001  
12/10 16:11:43 - mmengine - INFO - Iter(test) [600/645]    eta: 0:00:09  time: 0.1402  data_time: 0.0709  memory: 2889  
12/10 16:11:50 - mmengine - INFO - per class results:
12/10 16:11:50 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.09 | 99.14 |
|    roi     |  8.99 | 15.14 |
+------------+-------+-------+
12/10 16:11:50 - mmengine - INFO - Iter(test) [645/645]    aAcc: 98.1000  mIoU: 53.5400  mAcc: 57.1400  data_time: 0.0859  time: 0.2047
12/10 16:12:27 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1112337264
    GPU 0: NVIDIA A40
    CUDA_HOME: None
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1112337264
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

12/10 16:12:27 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            512,
            512,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_large_p16.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=24,
        out_indices=23,
        patch_size=16,
        type='VisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=0,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(crop_size=(
        512,
        512,
    ), mode='slide', stride=(
        341,
        341,
    )),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_layers = 24
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=10.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_log_dir = 'work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210'
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/test'

/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:249: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
12/10 16:12:31 - mmengine - INFO - Total parameters: 308317846
12/10 16:12:31 - mmengine - INFO - Trainable parameters: 308317846
12/10 16:12:31 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:61: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
12/10 16:12:31 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
12/10 16:12:32 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth
12/10 16:13:30 - mmengine - INFO - Load checkpoint from work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth
12/10 16:13:42 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:07:20  time: 0.1667  data_time: 0.0020  memory: 2211  
12/10 16:13:50 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:06:02  time: 0.1596  data_time: 0.0019  memory: 2026  
12/10 16:13:57 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:05:25  time: 0.1528  data_time: 0.0019  memory: 1985  
12/10 16:14:05 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:05:09  time: 0.1610  data_time: 0.0018  memory: 2089  
12/10 16:14:12 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:04:51  time: 0.1535  data_time: 0.0017  memory: 2124  
12/10 16:14:20 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:04:39  time: 0.1627  data_time: 0.0020  memory: 2022  
12/10 16:14:28 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:04:28  time: 0.1462  data_time: 0.0018  memory: 2021  
12/10 16:14:35 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:04:18  time: 0.1627  data_time: 0.0019  memory: 2024  
12/10 16:14:42 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:04:05  time: 0.1462  data_time: 0.0018  memory: 1982  
12/10 16:14:50 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:03:56  time: 0.1469  data_time: 0.0020  memory: 1985  
12/10 16:14:58 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:03:49  time: 0.1708  data_time: 0.0019  memory: 2019  
12/10 16:15:05 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:03:41  time: 0.1627  data_time: 0.0019  memory: 2024  
12/10 16:15:13 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:03:32  time: 0.1541  data_time: 0.0018  memory: 2036  
12/10 16:15:21 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:03:25  time: 0.1625  data_time: 0.0019  memory: 2034  
12/10 16:15:29 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:03:17  time: 0.1614  data_time: 0.0017  memory: 2044  
12/10 16:15:36 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:03:07  time: 0.1621  data_time: 0.0020  memory: 1987  
12/10 16:15:44 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:03:00  time: 0.1618  data_time: 0.0019  memory: 1979  
12/10 16:15:51 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:02:51  time: 0.1293  data_time: 0.0019  memory: 2000  
12/10 16:15:58 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:02:43  time: 0.1450  data_time: 0.0018  memory: 2016  
12/10 16:16:05 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:02:34  time: 0.1449  data_time: 0.0018  memory: 2017  
12/10 16:16:13 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:02:27  time: 0.1682  data_time: 0.0019  memory: 2046  
12/10 16:16:21 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:02:19  time: 0.1451  data_time: 0.0019  memory: 2008  
12/10 16:16:29 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:02:11  time: 0.1522  data_time: 0.0018  memory: 2003  
12/10 16:16:36 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:02:03  time: 0.1442  data_time: 0.0019  memory: 2842  
12/10 16:16:43 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:01:55  time: 0.1442  data_time: 0.0018  memory: 1995  
12/10 16:16:50 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:01:47  time: 0.1516  data_time: 0.0017  memory: 1980  
12/10 16:16:58 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:01:39  time: 0.1355  data_time: 0.0019  memory: 1981  
12/10 16:17:05 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:01:31  time: 0.1589  data_time: 0.0018  memory: 2015  
12/10 16:17:12 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:23  time: 0.1589  data_time: 0.0018  memory: 2016  
12/10 16:17:19 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:16  time: 0.1352  data_time: 0.0018  memory: 1979  
12/10 16:17:27 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:01:08  time: 0.1511  data_time: 0.0018  memory: 2010  
12/10 16:17:34 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:00  time: 0.1511  data_time: 0.0019  memory: 1978  
12/10 16:17:41 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:00:53  time: 0.1273  data_time: 0.0017  memory: 2094  
12/10 16:17:49 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:45  time: 0.1513  data_time: 0.0019  memory: 2013  
12/10 16:17:56 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:37  time: 0.1429  data_time: 0.0017  memory: 2019  
12/10 16:18:03 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:30  time: 0.1590  data_time: 0.0019  memory: 1988  
12/10 16:18:11 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:22  time: 0.1589  data_time: 0.0019  memory: 1953  
12/10 16:18:18 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:15  time: 0.1352  data_time: 0.0018  memory: 2034  
12/10 16:18:25 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:07  time: 0.1427  data_time: 0.0018  memory: 2116  
12/10 16:18:32 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.1343  data_time: 0.0016  memory: 2039  
12/10 16:18:32 - mmengine - INFO - per class results:
12/10 16:18:32 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 75.83 | 88.01 |
|       building      | 82.94 | 92.55 |
|         sky         | 93.62 | 96.76 |
|        floor        | 80.68 | 89.16 |
|         tree        | 74.65 |  87.6 |
|       ceiling       | 82.02 | 90.19 |
|         road        | 81.22 | 88.93 |
|         bed         | 87.88 | 94.85 |
|      windowpane     | 60.06 | 75.88 |
|        grass        | 64.38 | 77.71 |
|       cabinet       | 57.51 | 70.67 |
|       sidewalk      | 60.74 | 73.87 |
|        person       | 78.17 | 90.54 |
|        earth        | 38.43 |  53.5 |
|         door        | 45.41 | 59.84 |
|        table        | 56.08 | 72.79 |
|       mountain      | 56.82 |  72.9 |
|        plant        | 50.94 | 62.57 |
|       curtain       |  73.7 | 84.71 |
|        chair        | 52.77 | 67.06 |
|         car         | 82.11 | 92.07 |
|        water        | 52.95 | 69.42 |
|       painting      | 68.52 |  81.6 |
|         sofa        | 65.95 | 84.06 |
|        shelf        | 41.96 | 57.16 |
|        house        | 52.41 | 72.01 |
|         sea         | 55.76 | 68.57 |
|        mirror       | 61.43 | 68.48 |
|         rug         | 64.04 | 70.67 |
|        field        |  27.6 | 47.74 |
|       armchair      | 40.97 | 58.31 |
|         seat        |  59.2 | 78.98 |
|        fence        | 44.18 | 61.23 |
|         desk        | 47.04 | 67.76 |
|         rock        | 45.61 | 69.24 |
|       wardrobe      | 47.97 | 64.53 |
|         lamp        | 51.33 | 64.74 |
|       bathtub       | 81.82 | 90.93 |
|       railing       | 35.67 |  49.9 |
|       cushion       | 53.68 | 66.91 |
|         base        |  32.4 | 53.55 |
|         box         | 26.38 | 37.66 |
|        column       | 40.69 | 50.34 |
|      signboard      | 30.74 | 41.47 |
|   chest of drawers  | 40.04 | 58.06 |
|       counter       | 38.28 | 45.91 |
|         sand        | 51.95 | 75.77 |
|         sink        | 64.44 | 71.74 |
|      skyscraper     | 61.43 | 79.51 |
|      fireplace      | 73.13 | 89.32 |
|     refrigerator    |  64.5 | 79.39 |
|      grandstand     | 48.49 | 86.98 |
|         path        | 21.09 | 27.26 |
|        stairs       | 22.54 | 29.24 |
|        runway       | 70.15 | 94.14 |
|         case        | 59.67 | 82.05 |
|      pool table     |  85.6 | 96.57 |
|        pillow       | 52.61 | 60.89 |
|     screen door     | 51.18 | 60.01 |
|       stairway      | 28.97 | 39.29 |
|        river        | 11.99 |  29.4 |
|        bridge       | 43.78 | 59.41 |
|       bookcase      | 43.08 | 69.66 |
|        blind        |  39.7 |  43.5 |
|     coffee table    | 56.15 | 79.88 |
|        toilet       | 79.97 | 89.57 |
|        flower       |  34.2 | 50.95 |
|         book        | 44.96 | 59.47 |
|         hill        |  5.21 | 10.49 |
|        bench        | 44.84 | 52.16 |
|      countertop     | 54.37 | 68.29 |
|        stove        | 59.68 |  73.8 |
|         palm        | 51.71 | 69.04 |
|    kitchen island   |  36.3 | 74.99 |
|       computer      | 68.53 | 89.18 |
|     swivel chair    | 38.49 | 58.01 |
|         boat        | 61.57 | 76.99 |
|         bar         | 50.08 | 64.69 |
|    arcade machine   | 81.87 | 91.35 |
|        hovel        | 36.26 | 53.53 |
|         bus         |  81.3 |  93.4 |
|        towel        | 54.36 | 74.26 |
|        light        | 35.63 | 39.49 |
|        truck        | 31.89 | 41.04 |
|        tower        | 32.82 | 51.31 |
|      chandelier     | 59.43 | 74.99 |
|        awning       | 25.58 | 28.96 |
|     streetlight     | 15.69 | 19.62 |
|        booth        | 42.27 | 46.49 |
| television receiver |  63.9 |  74.6 |
|       airplane      |  51.9 | 63.55 |
|      dirt track     |  1.79 |  8.62 |
|       apparel       | 29.43 | 37.75 |
|         pole        |  15.3 | 19.95 |
|         land        |  3.79 |  5.79 |
|      bannister      |  6.9  |  9.8  |
|      escalator      | 50.13 |  76.7 |
|       ottoman       | 41.78 | 54.47 |
|        bottle       | 35.09 |  57.3 |
|        buffet       |  48.6 | 64.64 |
|        poster       | 34.72 | 40.01 |
|        stage        | 19.97 | 44.16 |
|         van         | 39.75 | 48.18 |
|         ship        | 58.07 | 73.72 |
|       fountain      | 41.31 | 44.78 |
|    conveyer belt    | 65.57 | 94.54 |
|        canopy       | 44.02 | 55.92 |
|        washer       | 70.83 | 76.67 |
|      plaything      | 12.14 | 17.66 |
|    swimming pool    | 55.17 | 69.62 |
|        stool        | 32.99 | 40.26 |
|        barrel       | 45.53 |  63.4 |
|        basket       | 29.68 | 35.99 |
|      waterfall      | 45.94 | 52.82 |
|         tent        | 77.91 | 99.54 |
|         bag         |  9.98 | 11.26 |
|       minibike      | 64.94 | 78.34 |
|        cradle       | 64.07 | 87.04 |
|         oven        | 35.17 | 46.39 |
|         ball        | 44.73 | 59.43 |
|         food        | 50.63 | 58.94 |
|         step        |  6.8  |  8.55 |
|         tank        | 57.06 | 64.81 |
|      trade name     | 19.74 | 21.31 |
|      microwave      | 77.07 | 87.33 |
|         pot         | 39.65 | 44.86 |
|        animal       | 54.72 | 57.07 |
|       bicycle       |  53.5 | 74.12 |
|         lake        | 15.47 | 25.07 |
|      dishwasher     | 41.85 | 55.28 |
|        screen       | 61.38 | 87.97 |
|       blanket       | 10.56 | 13.44 |
|      sculpture      | 47.07 | 56.62 |
|         hood        |  55.0 | 65.32 |
|        sconce       | 21.55 | 24.41 |
|         vase        | 23.99 | 34.48 |
|    traffic light    |  19.9 | 30.85 |
|         tray        |  3.11 |  4.31 |
|        ashcan       | 34.49 |  43.6 |
|         fan         | 47.18 | 59.28 |
|         pier        | 49.28 | 70.14 |
|      crt screen     |  6.37 | 11.44 |
|        plate        | 49.16 | 64.48 |
|       monitor       | 55.76 | 72.48 |
|    bulletin board   | 36.47 | 54.87 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 56.25 | 67.35 |
|        glass        |  7.19 |  7.47 |
|        clock        | 16.43 | 19.93 |
|         flag        |  53.7 | 57.96 |
+---------------------+-------+-------+
12/10 16:18:32 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.0800  mIoU: 46.8800  mAcc: 59.4900  data_time: 0.0028  time: 0.1507
12/10 16:18:37 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1061344072
    GPU 0: NVIDIA A40
    CUDA_HOME: None
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1061344072
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

12/10 16:18:37 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            512,
            512,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_large_p16.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=24,
        out_indices=23,
        patch_size=16,
        prompt_cfg=dict(
            depth=24,
            dropout=0.1,
            init='random',
            length=50,
            location='prepend',
            shared=False),
        type='PromptedVisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=0,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_layers = 24
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.0005, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=1.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.0005, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_log_dir = 'work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210'
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/test'

/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()`` 
  warnings.warn('``build_loss`` would be deprecated soon, please use '
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:249: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
12/10 16:18:41 - mmengine - INFO - Total parameters: 309546646
12/10 16:18:41 - mmengine - INFO - Trainable parameters: 5400214
12/10 16:18:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:61: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
12/10 16:18:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/s1952889/final-project/implementation/mmsegmentation/mmseg/datasets/transforms/loading.py:83: UserWarning: `reduce_zero_label` will be deprecated, if you would like to ignore the zero label, please set `reduce_zero_label=True` when dataset initialized
  warnings.warn('`reduce_zero_label` will be deprecated, '
12/10 16:18:42 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Loads checkpoint by local backend from path: work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth
12/10 16:19:36 - mmengine - INFO - Load checkpoint from work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/20231208_113210/iter_160000.pth
12/10 16:19:47 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:07:14  time: 0.1976  data_time: 0.0020  memory: 2732  
12/10 16:19:54 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:05:44  time: 0.1563  data_time: 0.0020  memory: 2704  
12/10 16:20:00 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:04:56  time: 0.1182  data_time: 0.0019  memory: 2347  
12/10 16:20:07 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:04:38  time: 0.1285  data_time: 0.0019  memory: 3016  
12/10 16:20:14 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:04:23  time: 0.1115  data_time: 0.0018  memory: 3196  
12/10 16:20:20 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:04:06  time: 0.1174  data_time: 0.0016  memory: 2552  
12/10 16:20:26 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:03:54  time: 0.1058  data_time: 0.0014  memory: 2655  
12/10 16:20:32 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:03:42  time: 0.1159  data_time: 0.0014  memory: 2579  
12/10 16:20:37 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:03:29  time: 0.1024  data_time: 0.0014  memory: 1901  
12/10 16:20:43 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:03:19  time: 0.1084  data_time: 0.0014  memory: 2116  
12/10 16:20:49 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:03:11  time: 0.1221  data_time: 0.0020  memory: 1929  
12/10 16:20:54 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:03:02  time: 0.1179  data_time: 0.0019  memory: 1940  
12/10 16:21:00 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:02:54  time: 0.1369  data_time: 0.0018  memory: 2756  
12/10 16:21:06 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:02:47  time: 0.1185  data_time: 0.0019  memory: 2629  
12/10 16:21:12 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:02:40  time: 0.1248  data_time: 0.0018  memory: 2784  
12/10 16:21:18 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:02:32  time: 0.1142  data_time: 0.0019  memory: 1838  
12/10 16:21:24 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:02:25  time: 0.1159  data_time: 0.0019  memory: 1812  
12/10 16:21:29 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:02:17  time: 0.0983  data_time: 0.0018  memory: 1875  
12/10 16:21:35 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:02:11  time: 0.1107  data_time: 0.0018  memory: 2142  
12/10 16:21:40 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:02:03  time: 0.1076  data_time: 0.0018  memory: 1916  
12/10 16:21:46 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:01:57  time: 0.1393  data_time: 0.0019  memory: 2808  
12/10 16:21:52 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:01:51  time: 0.1112  data_time: 0.0018  memory: 2373  
12/10 16:21:58 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:01:44  time: 0.1139  data_time: 0.0019  memory: 2218  
12/10 16:22:04 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:01:38  time: 0.1095  data_time: 0.0017  memory: 2846  
12/10 16:22:09 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:01:31  time: 0.1090  data_time: 0.0018  memory: 2526  
12/10 16:22:14 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:01:25  time: 0.1138  data_time: 0.0018  memory: 1825  
12/10 16:22:20 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:01:18  time: 0.1032  data_time: 0.0018  memory: 1825  
12/10 16:22:26 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:01:12  time: 0.1191  data_time: 0.0018  memory: 2502  
12/10 16:22:31 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:01:06  time: 0.1179  data_time: 0.0018  memory: 1916  
12/10 16:22:36 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:01:00  time: 0.1031  data_time: 0.0018  memory: 1823  
12/10 16:22:42 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:00:54  time: 0.1158  data_time: 0.0018  memory: 1903  
12/10 16:22:48 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:00:47  time: 0.1109  data_time: 0.0019  memory: 1812  
12/10 16:22:54 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:00:41  time: 0.1018  data_time: 0.0017  memory: 3063  
12/10 16:22:59 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:00:35  time: 0.1139  data_time: 0.0019  memory: 1913  
12/10 16:23:05 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:00:29  time: 0.1112  data_time: 0.0017  memory: 1926  
12/10 16:23:11 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:23  time: 0.1156  data_time: 0.0019  memory: 1836  
12/10 16:23:16 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:17  time: 0.1143  data_time: 0.0020  memory: 1747  
12/10 16:23:22 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:11  time: 0.1080  data_time: 0.0016  memory: 1968  
12/10 16:23:28 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:05  time: 0.1079  data_time: 0.0014  memory: 3166  
12/10 16:23:33 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.0988  data_time: 0.0012  memory: 1979  
12/10 16:23:33 - mmengine - INFO - per class results:
12/10 16:23:33 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 73.41 | 85.02 |
|       building      | 81.97 | 91.32 |
|         sky         | 92.81 | 96.06 |
|        floor        | 78.41 | 87.46 |
|         tree        | 73.21 | 84.97 |
|       ceiling       | 81.09 | 89.72 |
|         road        | 81.48 |  88.1 |
|         bed         | 84.47 | 94.56 |
|      windowpane     | 57.68 |  76.4 |
|        grass        | 64.44 |  78.3 |
|       cabinet       |  53.8 | 64.79 |
|       sidewalk      | 60.79 |  78.8 |
|        person       | 74.04 | 85.76 |
|        earth        | 37.43 | 51.82 |
|         door        | 42.93 | 58.36 |
|        table        | 52.31 | 67.89 |
|       mountain      | 56.04 | 70.31 |
|        plant        | 50.39 | 64.91 |
|       curtain       | 67.48 | 80.54 |
|        chair        | 46.36 | 60.07 |
|         car         | 78.87 | 92.08 |
|        water        | 54.39 | 68.32 |
|       painting      | 61.13 | 83.29 |
|         sofa        | 61.15 | 76.69 |
|        shelf        | 41.23 | 55.21 |
|        house        | 51.94 | 80.38 |
|         sea         | 57.52 | 78.65 |
|        mirror       | 59.28 | 69.16 |
|         rug         |  65.5 | 75.19 |
|        field        |  22.7 | 45.18 |
|       armchair      | 34.79 |  58.0 |
|         seat        | 63.21 |  80.6 |
|        fence        | 43.73 |  60.2 |
|         desk        | 40.37 | 68.83 |
|         rock        | 45.25 | 71.31 |
|       wardrobe      | 47.78 | 66.55 |
|         lamp        | 43.62 | 58.24 |
|       bathtub       | 72.64 | 87.09 |
|       railing       | 31.03 | 43.91 |
|       cushion       | 47.55 | 60.37 |
|         base        | 31.16 | 58.17 |
|         box         | 20.37 | 27.54 |
|        column       | 39.33 | 57.03 |
|      signboard      | 29.95 | 41.91 |
|   chest of drawers  | 32.98 | 53.78 |
|       counter       | 28.94 | 37.19 |
|         sand        | 40.98 | 67.03 |
|         sink        | 57.17 |  65.7 |
|      skyscraper     | 50.62 | 66.57 |
|      fireplace      | 56.69 | 86.43 |
|     refrigerator    | 54.96 | 76.23 |
|      grandstand     | 39.71 | 85.88 |
|         path        | 20.73 | 28.53 |
|        stairs       | 30.98 | 39.89 |
|        runway       | 68.58 | 92.71 |
|         case        | 63.56 | 79.98 |
|      pool table     | 81.66 | 95.58 |
|        pillow       | 46.67 | 55.99 |
|     screen door     | 63.43 |  79.4 |
|       stairway      | 35.88 | 43.44 |
|        river        | 17.27 | 39.38 |
|        bridge       | 57.06 | 86.26 |
|       bookcase      | 31.72 |  47.4 |
|        blind        | 38.18 | 41.16 |
|     coffee table    | 50.86 |  79.2 |
|        toilet       | 73.57 | 86.65 |
|        flower       | 29.84 | 48.07 |
|         book        | 42.43 | 66.01 |
|         hill        |  8.73 | 17.06 |
|        bench        | 46.36 |  58.6 |
|      countertop     | 44.37 | 69.49 |
|        stove        | 54.68 | 77.25 |
|         palm        | 47.19 | 66.63 |
|    kitchen island   | 33.63 | 73.69 |
|       computer      | 66.79 | 89.89 |
|     swivel chair    |  34.5 | 63.74 |
|         boat        | 61.22 | 85.23 |
|         bar         | 51.39 | 66.69 |
|    arcade machine   | 73.07 | 84.38 |
|        hovel        | 54.31 | 75.17 |
|         bus         | 76.31 | 88.35 |
|        towel        | 51.95 |  68.3 |
|        light        | 31.33 | 36.03 |
|        truck        | 28.45 | 42.95 |
|        tower        | 21.52 | 40.51 |
|      chandelier     | 55.63 | 75.49 |
|        awning       | 25.68 | 30.83 |
|     streetlight     |  6.29 |  8.93 |
|        booth        |  31.3 | 41.42 |
| television receiver | 57.31 | 70.58 |
|       airplane      |  50.6 | 60.87 |
|      dirt track     |  9.22 | 16.78 |
|       apparel       | 17.01 | 28.09 |
|         pole        | 13.87 | 16.87 |
|         land        |  0.5  |  0.66 |
|      bannister      |  3.55 |  4.47 |
|      escalator      | 42.79 | 61.71 |
|       ottoman       | 31.35 | 41.56 |
|        bottle       | 35.38 | 55.33 |
|        buffet       | 43.36 | 63.17 |
|        poster       | 10.11 | 13.54 |
|        stage        | 13.86 | 35.71 |
|         van         | 28.47 | 34.05 |
|         ship        | 75.67 | 89.52 |
|       fountain      | 42.94 | 50.81 |
|    conveyer belt    | 55.86 | 93.31 |
|        canopy       | 45.83 |  67.4 |
|        washer       | 75.51 | 88.33 |
|      plaything      |  5.16 |  10.4 |
|    swimming pool    | 47.65 |  73.4 |
|        stool        | 18.41 |  25.3 |
|        barrel       | 18.62 | 74.32 |
|        basket       |  22.4 | 28.29 |
|      waterfall      | 67.49 | 89.45 |
|         tent        | 86.51 | 99.32 |
|         bag         |  0.51 |  0.51 |
|       minibike      | 62.09 | 74.32 |
|        cradle       | 48.51 | 83.98 |
|         oven        |  6.05 | 13.94 |
|         ball        | 39.11 | 62.91 |
|         food        | 48.52 | 55.54 |
|         step        |  1.65 |  1.69 |
|         tank        | 46.01 | 49.85 |
|      trade name     | 17.33 | 18.65 |
|      microwave      | 46.24 | 52.84 |
|         pot         | 38.17 | 43.49 |
|        animal       | 47.91 | 49.15 |
|       bicycle       | 40.75 | 65.64 |
|         lake        |  0.0  |  0.01 |
|      dishwasher     | 23.58 | 34.48 |
|        screen       | 44.05 | 89.25 |
|       blanket       |  0.19 |  0.2  |
|      sculpture      | 35.35 | 46.59 |
|         hood        | 44.65 | 57.04 |
|        sconce       |  0.06 |  0.06 |
|         vase        | 17.15 | 26.38 |
|    traffic light    |  0.1  |  0.1  |
|         tray        |  1.33 |  1.39 |
|        ashcan       | 19.46 | 21.41 |
|         fan         | 30.58 | 35.58 |
|         pier        | 47.37 | 61.44 |
|      crt screen     |  0.17 |  0.36 |
|        plate        | 34.27 | 51.77 |
|       monitor       |  0.38 |  0.42 |
|    bulletin board   | 20.07 | 22.07 |
|        shower       |  0.0  |  0.0  |
|       radiator      |  9.43 |  9.43 |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.13 |  0.13 |
|         flag        | 15.05 | 15.28 |
+---------------------+-------+-------+
12/10 16:23:33 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.4100  mIoU: 41.2000  mAcc: 55.1200  data_time: 0.0024  time: 0.1184
/bin/bash: /home/s1952889/miniconda3/envs/prompt/lib/libtinfo.so.6: no version information available (required by /bin/bash)
