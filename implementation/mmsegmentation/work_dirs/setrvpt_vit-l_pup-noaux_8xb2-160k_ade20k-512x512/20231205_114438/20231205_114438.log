2023/12/05 11:44:38 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 155118252
    GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
    CUDA_HOME: /opt/cuda
    NVCC: Cuda compilation tools, release 12.2, V12.2.140
    GCC: gcc (GCC) 13.2.1 20230801
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 155118252
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/12/05 11:44:39 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            512,
            512,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_large_p16.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=24,
        out_indices=23,
        patch_size=16,
        prompt_cfg=dict(
            depth=24,
            dropout=0.1,
            init='random',
            length=50,
            location='prepend',
            shared=False),
        type='PromptedVisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=0,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_layers = 24
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.0005, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=1.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.0005, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512'

2023/12/05 11:44:41 - mmengine - INFO - Total parameters: 309546646
2023/12/05 11:44:41 - mmengine - INFO - Trainable parameters: 5400214
2023/12/05 11:44:41 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/12/05 11:44:41 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/12/05 11:44:41 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/12/05 11:44:48 - mmengine - INFO - Load checkpoint from work_dirs/setrvpt_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/iter_160000.pth
2023/12/05 11:45:11 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:15:03  time: 0.4075  data_time: 0.0017  memory: 2732  
2023/12/05 11:45:28 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:12:45  time: 0.3894  data_time: 0.0016  memory: 2704  
2023/12/05 11:45:42 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:11:10  time: 0.2812  data_time: 0.0017  memory: 2347  
2023/12/05 11:45:59 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:10:41  time: 0.3113  data_time: 0.0016  memory: 3016  
2023/12/05 11:46:16 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:10:15  time: 0.2647  data_time: 0.0011  memory: 3196  
2023/12/05 11:46:30 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:09:40  time: 0.2795  data_time: 0.0012  memory: 2552  
2023/12/05 11:46:45 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:09:13  time: 0.2517  data_time: 0.0012  memory: 2655  
2023/12/05 11:47:00 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:08:46  time: 0.2776  data_time: 0.0012  memory: 2579  
2023/12/05 11:47:12 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:08:14  time: 0.2426  data_time: 0.0011  memory: 1901  
2023/12/05 11:47:25 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:07:51  time: 0.2578  data_time: 0.0011  memory: 2116  
2023/12/05 11:47:40 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:32  time: 0.2863  data_time: 0.0011  memory: 1977  
2023/12/05 11:47:53 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:07:11  time: 0.2794  data_time: 0.0012  memory: 1940  
2023/12/05 11:48:07 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:53  time: 0.3412  data_time: 0.0016  memory: 2756  
2023/12/05 11:48:22 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:37  time: 0.2825  data_time: 0.0017  memory: 2629  
2023/12/05 11:48:37 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:21  time: 0.3021  data_time: 0.0016  memory: 2784  
2023/12/05 11:48:49 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:02  time: 0.2721  data_time: 0.0019  memory: 1914  
2023/12/05 11:49:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:45  time: 0.2758  data_time: 0.0016  memory: 1816  
2023/12/05 11:49:15 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:26  time: 0.2340  data_time: 0.0015  memory: 1913  
2023/12/05 11:49:30 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:11  time: 0.2637  data_time: 0.0018  memory: 2142  
2023/12/05 11:49:42 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:54  time: 0.2562  data_time: 0.0017  memory: 2044  
2023/12/05 11:49:58 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:40  time: 0.3447  data_time: 0.0015  memory: 2808  
2023/12/05 11:50:12 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:24  time: 0.2648  data_time: 0.0017  memory: 2373  
2023/12/05 11:50:25 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:09  time: 0.2709  data_time: 0.0015  memory: 2218  
2023/12/05 11:50:39 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:54  time: 0.2621  data_time: 0.0017  memory: 2846  
2023/12/05 11:50:53 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:38  time: 0.2600  data_time: 0.0017  memory: 2526  
2023/12/05 11:51:05 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:22  time: 0.2723  data_time: 0.0015  memory: 1825  
2023/12/05 11:51:18 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:07  time: 0.2455  data_time: 0.0015  memory: 1888  
2023/12/05 11:51:32 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:53  time: 0.2857  data_time: 0.0014  memory: 2502  
2023/12/05 11:51:45 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:38  time: 0.2809  data_time: 0.0016  memory: 2044  
2023/12/05 11:51:58 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:23  time: 0.2454  data_time: 0.0016  memory: 1823  
2023/12/05 11:52:12 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:08  time: 0.2771  data_time: 0.0011  memory: 2031  
2023/12/05 11:52:25 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:54  time: 0.2643  data_time: 0.0011  memory: 1886  
2023/12/05 11:52:39 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:39  time: 0.2415  data_time: 0.0010  memory: 3063  
2023/12/05 11:52:53 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:25  time: 0.2706  data_time: 0.0012  memory: 2041  
2023/12/05 11:53:07 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:11  time: 0.2642  data_time: 0.0013  memory: 1926  
2023/12/05 11:53:19 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:56  time: 0.2756  data_time: 0.0013  memory: 1840  
2023/12/05 11:53:33 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:42  time: 0.2716  data_time: 0.0012  memory: 1751  
2023/12/05 11:53:45 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:28  time: 0.2587  data_time: 0.0011  memory: 2043  
2023/12/05 11:54:00 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.2582  data_time: 0.0011  memory: 3166  
2023/12/05 11:54:13 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2368  data_time: 0.0011  memory: 1979  
2023/12/05 11:54:13 - mmengine - INFO - per class results:
2023/12/05 11:54:13 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        | 74.18 | 86.32 |
|       building      | 81.91 | 92.28 |
|         sky         |  92.9 | 96.48 |
|        floor        | 79.38 | 89.19 |
|         tree        | 72.72 | 86.15 |
|       ceiling       | 81.05 | 89.31 |
|         road        | 81.42 | 89.12 |
|         bed         | 86.08 | 93.78 |
|      windowpane     | 58.31 |  76.0 |
|        grass        | 65.14 | 78.99 |
|       cabinet       | 54.97 | 68.29 |
|       sidewalk      | 60.21 | 76.74 |
|        person       | 74.92 | 87.59 |
|        earth        | 34.27 | 49.37 |
|         door        | 43.05 | 57.49 |
|        table        | 52.11 | 68.11 |
|       mountain      | 56.47 | 71.85 |
|        plant        | 50.59 | 61.29 |
|       curtain       | 69.28 | 83.33 |
|        chair        | 47.96 | 62.54 |
|         car         | 79.75 |  91.5 |
|        water        | 58.05 | 73.78 |
|       painting      | 65.79 | 80.71 |
|         sofa        | 62.22 | 77.33 |
|        shelf        | 40.76 | 55.94 |
|        house        | 52.47 | 74.79 |
|         sea         |  60.0 | 76.64 |
|        mirror       | 57.92 | 69.04 |
|         rug         | 64.49 | 72.58 |
|        field        | 26.86 | 45.01 |
|       armchair      | 35.98 | 58.81 |
|         seat        | 60.58 |  82.4 |
|        fence        | 40.08 | 54.75 |
|         desk        |  38.7 | 63.86 |
|         rock        | 43.08 | 65.71 |
|       wardrobe      | 47.88 | 66.49 |
|         lamp        |  44.4 | 60.39 |
|       bathtub       | 74.72 | 83.45 |
|       railing       |  32.3 | 44.08 |
|       cushion       | 46.21 | 61.16 |
|         base        | 27.84 | 48.75 |
|         box         | 21.37 |  30.1 |
|        column       | 40.33 | 56.43 |
|      signboard      | 28.23 | 38.27 |
|   chest of drawers  |  34.6 | 51.49 |
|       counter       | 28.39 | 36.39 |
|         sand        |  39.7 | 63.35 |
|         sink        | 58.07 |  65.4 |
|      skyscraper     | 51.79 | 65.43 |
|      fireplace      | 61.31 | 86.93 |
|     refrigerator    | 61.32 | 75.04 |
|      grandstand     | 41.75 | 84.91 |
|         path        |  28.1 | 36.37 |
|        stairs       | 26.93 | 34.29 |
|        runway       | 66.19 | 86.45 |
|         case        | 59.76 | 76.05 |
|      pool table     | 85.98 |  94.6 |
|        pillow       | 52.45 | 64.77 |
|     screen door     | 65.42 | 77.24 |
|       stairway      | 32.22 | 46.74 |
|        river        | 15.35 | 28.92 |
|        bridge       | 37.87 | 48.25 |
|       bookcase      |  35.4 | 62.94 |
|        blind        | 39.49 | 44.83 |
|     coffee table    | 53.13 | 79.81 |
|        toilet       | 73.47 | 89.09 |
|        flower       | 30.93 | 40.81 |
|         book        | 42.18 | 58.34 |
|         hill        | 10.05 | 18.83 |
|        bench        | 43.44 | 51.22 |
|      countertop     | 51.14 | 68.45 |
|        stove        | 56.21 | 69.69 |
|         palm        | 45.99 | 64.46 |
|    kitchen island   | 37.31 | 76.78 |
|       computer      | 60.25 | 78.88 |
|     swivel chair    | 35.79 | 56.83 |
|         boat        | 64.04 | 82.83 |
|         bar         | 51.82 | 67.56 |
|    arcade machine   | 74.66 | 83.34 |
|        hovel        | 48.07 | 73.57 |
|         bus         | 78.42 | 89.94 |
|        towel        | 48.25 |  70.7 |
|        light        | 32.98 | 37.58 |
|        truck        | 31.56 | 42.43 |
|        tower        |  23.6 | 36.94 |
|      chandelier     | 55.82 |  72.3 |
|        awning       | 27.95 | 34.56 |
|     streetlight     |  6.7  |  9.51 |
|        booth        |  31.9 | 37.93 |
| television receiver | 60.26 | 71.91 |
|       airplane      |  51.9 | 61.25 |
|      dirt track     |  9.71 | 10.81 |
|       apparel       | 24.87 | 34.84 |
|         pole        |  8.99 | 10.58 |
|         land        |  2.53 |  4.11 |
|      bannister      |  1.45 |  1.77 |
|      escalator      | 46.37 | 73.45 |
|       ottoman       | 32.61 | 43.24 |
|        bottle       | 33.16 | 45.87 |
|        buffet       | 38.45 | 50.27 |
|        poster       | 23.72 |  30.5 |
|        stage        | 19.53 | 39.98 |
|         van         | 28.63 | 35.34 |
|         ship        | 72.16 | 87.44 |
|       fountain      | 41.71 |  49.7 |
|    conveyer belt    | 63.18 | 91.59 |
|        canopy       | 47.98 | 68.96 |
|        washer       | 72.54 |  85.5 |
|      plaything      |  9.67 | 15.31 |
|    swimming pool    |  46.7 | 61.21 |
|        stool        | 14.29 | 17.37 |
|        barrel       | 30.29 | 48.25 |
|        basket       | 23.22 | 29.21 |
|      waterfall      | 70.71 |  86.9 |
|         tent        | 82.47 | 99.41 |
|         bag         |  5.22 |  5.44 |
|       minibike      | 61.15 | 74.38 |
|        cradle       | 58.09 | 82.65 |
|         oven        | 14.71 | 25.01 |
|         ball        | 41.43 | 61.99 |
|         food        |  39.2 | 42.75 |
|         step        |  1.37 |  1.52 |
|         tank        | 49.53 | 53.34 |
|      trade name     | 13.62 | 14.26 |
|      microwave      | 62.69 | 70.27 |
|         pot         | 34.35 | 37.96 |
|        animal       | 45.97 | 47.13 |
|       bicycle       | 49.83 |  70.4 |
|         lake        |  42.6 |  48.5 |
|      dishwasher     | 25.07 | 38.93 |
|        screen       | 60.46 | 88.24 |
|       blanket       |  3.5  |  4.1  |
|      sculpture      | 40.72 | 53.98 |
|         hood        | 47.14 | 54.21 |
|        sconce       |  0.55 |  0.55 |
|         vase        | 17.19 | 21.19 |
|    traffic light    |  3.25 |  3.41 |
|         tray        |  0.53 |  0.55 |
|        ashcan       | 21.48 | 25.49 |
|         fan         | 37.33 |  43.9 |
|         pier        | 31.22 | 37.28 |
|      crt screen     |  0.08 |  0.33 |
|        plate        | 39.81 | 50.91 |
|       monitor       |  1.24 |  1.58 |
|    bulletin board   | 29.66 | 35.85 |
|        shower       |  0.0  |  0.0  |
|       radiator      | 35.83 | 36.63 |
|        glass        |  0.0  |  0.0  |
|        clock        |  2.35 |  2.37 |
|         flag        | 41.25 | 43.86 |
+---------------------+-------+-------+
2023/12/05 11:54:13 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 80.8600  mIoU: 42.8000  mAcc: 55.0200  data_time: 0.0015  time: 0.2824
