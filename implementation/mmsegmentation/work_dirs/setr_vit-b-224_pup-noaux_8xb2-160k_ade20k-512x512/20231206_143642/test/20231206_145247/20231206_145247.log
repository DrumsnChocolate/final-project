2023/12/06 14:52:48 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1715550106
    GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
    CUDA_HOME: /opt/cuda
    NVCC: Cuda compilation tools, release 12.2, V12.2.140
    GCC: gcc (GCC) 13.2.1 20230801
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 1715550106
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/12/06 14:52:48 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    200,
    200,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        200,
        200,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/setr_vit-b-224_pup-noaux_8xb2-160k_ade20k-512x512/20231206_143642/iter_160.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            200,
            200,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_base_p16_384.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=1,
        out_indices=0,
        patch_size=16,
        type='VisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            200,
            200,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=0,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(crop_size=(
        200,
        200,
    ), mode='slide', stride=(
        100,
        100,
    )),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_layers = 1
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=10.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(max_iters=160, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/setr_vit-b-224_pup-noaux_8xb2-160k_ade20k-512x512/20231206_143642/test'

2023/12/06 14:52:49 - mmengine - INFO - Total parameters: 17703574
2023/12/06 14:52:49 - mmengine - INFO - Trainable parameters: 17703574
2023/12/06 14:52:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/12/06 14:52:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/12/06 14:52:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/12/06 14:52:49 - mmengine - INFO - Load checkpoint from work_dirs/setr_vit-b-224_pup-noaux_8xb2-160k_ade20k-512x512/20231206_143642/iter_160.pth
2023/12/06 14:53:06 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:10:29  time: 0.3348  data_time: 0.0010  memory: 668  
2023/12/06 14:53:20 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:09:49  time: 0.3140  data_time: 0.0011  memory: 652  
2023/12/06 14:53:36 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:09:30  time: 0.3145  data_time: 0.0018  memory: 568  
2023/12/06 14:53:51 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:09:18  time: 0.3053  data_time: 0.0011  memory: 773  
2023/12/06 14:54:06 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:08:58  time: 0.2920  data_time: 0.0014  memory: 842  
2023/12/06 14:54:21 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:08:37  time: 0.3139  data_time: 0.0016  memory: 641  
2023/12/06 14:54:36 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:08:20  time: 0.2772  data_time: 0.0017  memory: 642  
2023/12/06 14:54:51 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:08:04  time: 0.3018  data_time: 0.0015  memory: 648  
2023/12/06 14:55:04 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:07:42  time: 0.2687  data_time: 0.0014  memory: 788  
2023/12/06 14:55:18 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:07:26  time: 0.2795  data_time: 0.0016  memory: 568  
2023/12/06 14:55:34 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:07:14  time: 0.3165  data_time: 0.0015  memory: 635  
2023/12/06 14:55:49 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:06:58  time: 0.3017  data_time: 0.0011  memory: 646  
2023/12/06 14:56:03 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:06:42  time: 0.3082  data_time: 0.0013  memory: 672  
2023/12/06 14:56:19 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:06:29  time: 0.3068  data_time: 0.0011  memory: 667  
2023/12/06 14:56:34 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:06:14  time: 0.2884  data_time: 0.0010  memory: 684  
2023/12/06 14:56:48 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:05:57  time: 0.2887  data_time: 0.0015  memory: 571  
2023/12/06 14:57:03 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:05:42  time: 0.2943  data_time: 0.0012  memory: 560  
2023/12/06 14:57:16 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:05:25  time: 0.2545  data_time: 0.0009  memory: 599  
2023/12/06 14:57:31 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:05:11  time: 0.2857  data_time: 0.0013  memory: 629  
2023/12/06 14:57:45 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:04:55  time: 0.2774  data_time: 0.0012  memory: 632  
2023/12/06 14:58:00 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:04:41  time: 0.3128  data_time: 0.0011  memory: 691  
2023/12/06 14:58:15 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:04:26  time: 0.2908  data_time: 0.0012  memory: 617  
2023/12/06 14:58:30 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:11  time: 0.2923  data_time: 0.0011  memory: 608  
2023/12/06 14:58:45 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:03:56  time: 0.2848  data_time: 0.0011  memory: 1733  
2023/12/06 14:58:59 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:03:41  time: 0.2884  data_time: 0.0011  memory: 592  
2023/12/06 14:59:13 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:03:26  time: 0.2929  data_time: 0.0012  memory: 559  
2023/12/06 14:59:27 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:11  time: 0.2630  data_time: 0.0011  memory: 560  
2023/12/06 14:59:42 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:02:56  time: 0.3146  data_time: 0.0011  memory: 632  
2023/12/06 14:59:56 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:02:41  time: 0.3104  data_time: 0.0011  memory: 630  
2023/12/06 15:00:10 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:26  time: 0.2679  data_time: 0.0011  memory: 558  
2023/12/06 15:00:26 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:12  time: 0.3003  data_time: 0.0011  memory: 617  
2023/12/06 15:00:40 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:01:57  time: 0.2904  data_time: 0.0012  memory: 556  
2023/12/06 15:00:54 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:01:42  time: 0.2677  data_time: 0.0010  memory: 787  
2023/12/06 15:01:09 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:28  time: 0.2933  data_time: 0.0012  memory: 629  
2023/12/06 15:01:25 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:13  time: 0.2963  data_time: 0.0011  memory: 639  
2023/12/06 15:01:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:00:58  time: 0.2948  data_time: 0.0012  memory: 576  
2023/12/06 15:01:53 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:44  time: 0.2881  data_time: 0.0012  memory: 508  
2023/12/06 15:02:07 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:29  time: 0.2937  data_time: 0.0011  memory: 665  
2023/12/06 15:02:22 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:14  time: 0.2784  data_time: 0.0011  memory: 831  
2023/12/06 15:02:36 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.2555  data_time: 0.0010  memory: 677  
2023/12/06 15:02:36 - mmengine - INFO - per class results:
2023/12/06 15:02:36 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  12.4 | 38.48 |
|       building      |  0.0  |  0.0  |
|         sky         | 18.47 |  96.4 |
|        floor        |  7.53 | 14.36 |
|         tree        |  0.04 |  0.04 |
|       ceiling       |  0.0  |  0.0  |
|         road        |  3.71 |  4.79 |
|         bed         |  0.0  |  0.0  |
|      windowpane     |  0.38 |  0.67 |
|        grass        |  0.0  |  0.0  |
|       cabinet       |  0.0  |  0.0  |
|       sidewalk      |  0.0  |  0.0  |
|        person       |  0.0  |  0.0  |
|        earth        |  0.0  |  0.0  |
|         door        |  0.0  |  0.0  |
|        table        |  0.0  |  0.0  |
|       mountain      |  0.0  |  0.0  |
|        plant        |  0.0  |  0.0  |
|       curtain       |  0.0  |  0.0  |
|        chair        |  0.0  |  0.0  |
|         car         |  0.0  |  0.0  |
|        water        |  0.0  |  0.0  |
|       painting      |  0.0  |  0.0  |
|         sofa        |  0.0  |  0.0  |
|        shelf        |  0.0  |  0.0  |
|        house        |  0.0  |  0.0  |
|         sea         |  0.0  |  0.0  |
|        mirror       |  0.0  |  0.0  |
|         rug         |  0.0  |  0.0  |
|        field        |  0.0  |  0.0  |
|       armchair      |  0.0  |  0.0  |
|         seat        |  0.0  |  0.0  |
|        fence        |  0.0  |  0.0  |
|         desk        |  0.0  |  0.0  |
|         rock        |  0.0  |  0.0  |
|       wardrobe      |  0.0  |  0.0  |
|         lamp        |  0.0  |  0.0  |
|       bathtub       |  0.0  |  0.0  |
|       railing       |  0.0  |  0.0  |
|       cushion       |  0.0  |  0.0  |
|         base        |  0.0  |  0.0  |
|         box         |  0.0  |  0.0  |
|        column       |  0.0  |  0.0  |
|      signboard      |  0.0  |  0.0  |
|   chest of drawers  |  0.0  |  0.0  |
|       counter       |  0.0  |  0.0  |
|         sand        |  0.0  |  0.0  |
|         sink        |  0.0  |  0.0  |
|      skyscraper     |  0.0  |  0.0  |
|      fireplace      |  0.0  |  0.0  |
|     refrigerator    |  0.0  |  0.0  |
|      grandstand     |  0.0  |  0.0  |
|         path        |  0.0  |  0.0  |
|        stairs       |  0.0  |  0.0  |
|        runway       |  0.0  |  0.0  |
|         case        |  0.0  |  0.0  |
|      pool table     |  0.0  |  0.0  |
|        pillow       |  0.0  |  0.0  |
|     screen door     |  0.0  |  0.0  |
|       stairway      |  0.0  |  0.0  |
|        river        |  0.0  |  0.0  |
|        bridge       |  0.0  |  0.0  |
|       bookcase      |  0.0  |  0.0  |
|        blind        |  0.0  |  0.0  |
|     coffee table    |  0.0  |  0.0  |
|        toilet       |  0.0  |  0.0  |
|        flower       |  0.0  |  0.0  |
|         book        |  0.0  |  0.0  |
|         hill        |  0.0  |  0.0  |
|        bench        |  0.0  |  0.0  |
|      countertop     |  0.0  |  0.0  |
|        stove        |  0.0  |  0.0  |
|         palm        |  0.0  |  0.0  |
|    kitchen island   |  0.0  |  0.0  |
|       computer      |  0.0  |  0.0  |
|     swivel chair    |  0.0  |  0.0  |
|         boat        |  0.0  |  0.0  |
|         bar         |  0.0  |  0.0  |
|    arcade machine   |  0.0  |  0.0  |
|        hovel        |  0.0  |  0.0  |
|         bus         |  0.0  |  0.0  |
|        towel        |  0.0  |  0.0  |
|        light        |  0.0  |  0.0  |
|        truck        |  0.0  |  0.0  |
|        tower        |  0.0  |  0.0  |
|      chandelier     |  0.0  |  0.0  |
|        awning       |  0.0  |  0.0  |
|     streetlight     |  0.0  |  0.0  |
|        booth        |  0.0  |  0.0  |
| television receiver |  0.0  |  0.0  |
|       airplane      |  0.0  |  0.0  |
|      dirt track     |  0.0  |  0.0  |
|       apparel       |  0.0  |  0.0  |
|         pole        |  0.0  |  0.0  |
|         land        |  0.0  |  0.0  |
|      bannister      |  0.0  |  0.0  |
|      escalator      |  0.0  |  0.0  |
|       ottoman       |  0.0  |  0.0  |
|        bottle       |  0.0  |  0.0  |
|        buffet       |  0.0  |  0.0  |
|        poster       |  0.0  |  0.0  |
|        stage        |  0.0  |  0.0  |
|         van         |  0.0  |  0.0  |
|         ship        |  0.0  |  0.0  |
|       fountain      |  0.0  |  0.0  |
|    conveyer belt    |  0.0  |  0.0  |
|        canopy       |  0.0  |  0.0  |
|        washer       |  0.0  |  0.0  |
|      plaything      |  0.0  |  0.0  |
|    swimming pool    |  0.0  |  0.0  |
|        stool        |  0.0  |  0.0  |
|        barrel       |  0.0  |  0.0  |
|        basket       |  0.0  |  0.0  |
|      waterfall      |  0.0  |  0.0  |
|         tent        |  0.0  |  0.0  |
|         bag         |  0.0  |  0.0  |
|       minibike      |  0.0  |  0.0  |
|        cradle       |  0.0  |  0.0  |
|         oven        |  0.0  |  0.0  |
|         ball        |  0.0  |  0.0  |
|         food        |  0.0  |  0.0  |
|         step        |  0.0  |  0.0  |
|         tank        |  0.0  |  0.0  |
|      trade name     |  0.0  |  0.0  |
|      microwave      |  0.0  |  0.0  |
|         pot         |  0.0  |  0.0  |
|        animal       |  0.0  |  0.0  |
|       bicycle       |  0.0  |  0.0  |
|         lake        |  0.0  |  0.0  |
|      dishwasher     |  0.0  |  0.0  |
|        screen       |  0.0  |  0.0  |
|       blanket       |  0.0  |  0.0  |
|      sculpture      |  0.0  |  0.0  |
|         hood        |  0.0  |  0.0  |
|        sconce       |  0.0  |  0.0  |
|         vase        |  0.0  |  0.0  |
|    traffic light    |  0.0  |  0.0  |
|         tray        |  0.0  |  0.0  |
|        ashcan       |  0.0  |  0.0  |
|         fan         |  0.0  |  0.0  |
|         pier        |  0.0  |  0.0  |
|      crt screen     |  0.0  |  0.0  |
|        plate        |  0.0  |  0.0  |
|       monitor       |  0.0  |  0.0  |
|    bulletin board   |  0.0  |  0.0  |
|        shower       |  0.0  |  0.0  |
|       radiator      |  0.0  |  0.0  |
|        glass        |  0.0  |  0.0  |
|        clock        |  0.0  |  0.0  |
|         flag        |  0.0  |  0.0  |
+---------------------+-------+-------+
2023/12/06 15:02:36 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 16.5300  mIoU: 0.2800  mAcc: 1.0300  data_time: 0.0013  time: 0.2931
