2023/12/04 13:37:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 1047776319
    GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
    CUDA_HOME: /opt/cuda
    NVCC: Cuda compilation tools, release 12.2, V12.2.140
    GCC: gcc (GCC) 13.2.1 20230801
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1047776319
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/12/04 13:37:15 - mmengine - INFO - Config:
backbone_norm_cfg = dict(eps=1e-06, requires_grad=True, type='LN')
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        512,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=[],
    backbone=dict(
        drop_rate=0.0,
        embed_dims=1024,
        img_size=(
            512,
            512,
        ),
        in_channels=3,
        init_cfg=dict(
            checkpoint='pretrain/vit_large_p16.pth', type='Pretrained'),
        interpolate_mode='bilinear',
        norm_cfg=dict(eps=1e-06, requires_grad=True, type='LN'),
        num_heads=16,
        num_layers=24,
        out_indices=23,
        patch_size=16,
        type='VisionTransformer',
        with_cls_token=True),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            512,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=256,
        dropout_ratio=0,
        in_channels=1024,
        in_index=0,
        kernel_size=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=4,
        type='SETRUPHead',
        up_scale=2),
    pretrained=None,
    test_cfg=dict(crop_size=(
        512,
        512,
    ), mode='slide', stride=(
        341,
        341,
    )),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
num_layers = 24
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0),
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=10.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        512,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            512,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        512,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512'

2023/12/04 13:37:17 - mmengine - INFO - Total parameters: 308317846
2023/12/04 13:37:17 - mmengine - INFO - Trainable parameters: 308317846
2023/12/04 13:37:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/12/04 13:37:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/12/04 13:37:18 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/12/04 13:37:19 - mmengine - INFO - Load checkpoint from work_dirs/setr_vit-l_pup-noaux_8xb2-160k_ade20k-512x512/iter_160000.pth
2023/12/04 13:37:38 - mmengine - INFO - Iter(test) [  50/2000]    eta: 0:12:21  time: 0.3864  data_time: 0.0012  memory: 2211  
2023/12/04 13:37:56 - mmengine - INFO - Iter(test) [ 100/2000]    eta: 0:11:44  time: 0.3700  data_time: 0.0010  memory: 2030  
2023/12/04 13:38:13 - mmengine - INFO - Iter(test) [ 150/2000]    eta: 0:11:05  time: 0.3517  data_time: 0.0014  memory: 1989  
2023/12/04 13:38:31 - mmengine - INFO - Iter(test) [ 200/2000]    eta: 0:10:50  time: 0.3696  data_time: 0.0014  memory: 2093  
2023/12/04 13:38:48 - mmengine - INFO - Iter(test) [ 250/2000]    eta: 0:10:22  time: 0.3513  data_time: 0.0013  memory: 2128  
2023/12/04 13:39:05 - mmengine - INFO - Iter(test) [ 300/2000]    eta: 0:10:02  time: 0.3702  data_time: 0.0012  memory: 2026  
2023/12/04 13:39:23 - mmengine - INFO - Iter(test) [ 350/2000]    eta: 0:09:45  time: 0.3315  data_time: 0.0009  memory: 2025  
2023/12/04 13:39:41 - mmengine - INFO - Iter(test) [ 400/2000]    eta: 0:09:26  time: 0.3698  data_time: 0.0010  memory: 2028  
2023/12/04 13:39:56 - mmengine - INFO - Iter(test) [ 450/2000]    eta: 0:08:59  time: 0.3311  data_time: 0.0009  memory: 1986  
2023/12/04 13:40:13 - mmengine - INFO - Iter(test) [ 500/2000]    eta: 0:08:41  time: 0.3326  data_time: 0.0010  memory: 1989  
2023/12/04 13:40:31 - mmengine - INFO - Iter(test) [ 550/2000]    eta: 0:08:26  time: 0.3886  data_time: 0.0010  memory: 2023  
2023/12/04 13:40:49 - mmengine - INFO - Iter(test) [ 600/2000]    eta: 0:08:09  time: 0.3699  data_time: 0.0012  memory: 2028  
2023/12/04 13:41:06 - mmengine - INFO - Iter(test) [ 650/2000]    eta: 0:07:50  time: 0.3512  data_time: 0.0013  memory: 2040  
2023/12/04 13:41:24 - mmengine - INFO - Iter(test) [ 700/2000]    eta: 0:07:35  time: 0.3704  data_time: 0.0012  memory: 2038  
2023/12/04 13:41:42 - mmengine - INFO - Iter(test) [ 750/2000]    eta: 0:07:18  time: 0.3691  data_time: 0.0011  memory: 2048  
2023/12/04 13:41:58 - mmengine - INFO - Iter(test) [ 800/2000]    eta: 0:06:58  time: 0.3701  data_time: 0.0012  memory: 1991  
2023/12/04 13:42:17 - mmengine - INFO - Iter(test) [ 850/2000]    eta: 0:06:42  time: 0.3743  data_time: 0.0012  memory: 1983  
2023/12/04 13:42:32 - mmengine - INFO - Iter(test) [ 900/2000]    eta: 0:06:22  time: 0.2952  data_time: 0.0012  memory: 2004  
2023/12/04 13:42:50 - mmengine - INFO - Iter(test) [ 950/2000]    eta: 0:06:05  time: 0.3334  data_time: 0.0011  memory: 2020  
2023/12/04 13:43:06 - mmengine - INFO - Iter(test) [1000/2000]    eta: 0:05:46  time: 0.3326  data_time: 0.0011  memory: 2021  
2023/12/04 13:43:25 - mmengine - INFO - Iter(test) [1050/2000]    eta: 0:05:30  time: 0.3882  data_time: 0.0012  memory: 2050  
2023/12/04 13:43:43 - mmengine - INFO - Iter(test) [1100/2000]    eta: 0:05:13  time: 0.3360  data_time: 0.0012  memory: 2012  
2023/12/04 13:44:00 - mmengine - INFO - Iter(test) [1150/2000]    eta: 0:04:56  time: 0.3515  data_time: 0.0012  memory: 2008  
2023/12/04 13:44:18 - mmengine - INFO - Iter(test) [1200/2000]    eta: 0:04:39  time: 0.3329  data_time: 0.0012  memory: 2842  
2023/12/04 13:44:33 - mmengine - INFO - Iter(test) [1250/2000]    eta: 0:04:20  time: 0.3371  data_time: 0.0012  memory: 1999  
2023/12/04 13:44:49 - mmengine - INFO - Iter(test) [1300/2000]    eta: 0:04:02  time: 0.3507  data_time: 0.0012  memory: 1984  
2023/12/04 13:45:06 - mmengine - INFO - Iter(test) [1350/2000]    eta: 0:03:44  time: 0.3139  data_time: 0.0011  memory: 1985  
2023/12/04 13:45:22 - mmengine - INFO - Iter(test) [1400/2000]    eta: 0:03:27  time: 0.3689  data_time: 0.0011  memory: 2019  
2023/12/04 13:45:38 - mmengine - INFO - Iter(test) [1450/2000]    eta: 0:03:09  time: 0.3694  data_time: 0.0012  memory: 2020  
2023/12/04 13:45:55 - mmengine - INFO - Iter(test) [1500/2000]    eta: 0:02:52  time: 0.3137  data_time: 0.0012  memory: 1983  
2023/12/04 13:46:13 - mmengine - INFO - Iter(test) [1550/2000]    eta: 0:02:34  time: 0.3520  data_time: 0.0012  memory: 2014  
2023/12/04 13:46:30 - mmengine - INFO - Iter(test) [1600/2000]    eta: 0:02:17  time: 0.3519  data_time: 0.0012  memory: 1982  
2023/12/04 13:46:46 - mmengine - INFO - Iter(test) [1650/2000]    eta: 0:02:00  time: 0.2960  data_time: 0.0010  memory: 2098  
2023/12/04 13:47:04 - mmengine - INFO - Iter(test) [1700/2000]    eta: 0:01:43  time: 0.3520  data_time: 0.0011  memory: 2017  
2023/12/04 13:47:22 - mmengine - INFO - Iter(test) [1750/2000]    eta: 0:01:26  time: 0.3336  data_time: 0.0011  memory: 2023  
2023/12/04 13:47:38 - mmengine - INFO - Iter(test) [1800/2000]    eta: 0:01:08  time: 0.3709  data_time: 0.0012  memory: 1992  
2023/12/04 13:47:57 - mmengine - INFO - Iter(test) [1850/2000]    eta: 0:00:51  time: 0.3711  data_time: 0.0011  memory: 1957  
2023/12/04 13:48:12 - mmengine - INFO - Iter(test) [1900/2000]    eta: 0:00:34  time: 0.3147  data_time: 0.0009  memory: 2038  
2023/12/04 13:48:30 - mmengine - INFO - Iter(test) [1950/2000]    eta: 0:00:17  time: 0.3336  data_time: 0.0010  memory: 2120  
2023/12/04 13:48:46 - mmengine - INFO - Iter(test) [2000/2000]    eta: 0:00:00  time: 0.3145  data_time: 0.0011  memory: 2043  
2023/12/04 13:48:46 - mmengine - INFO - per class results:
2023/12/04 13:48:46 - mmengine - INFO - 
+---------------------+-------+-------+
|        Class        |  IoU  |  Acc  |
+---------------------+-------+-------+
|         wall        |  76.1 | 87.03 |
|       building      | 82.17 | 92.31 |
|         sky         | 93.52 | 96.45 |
|        floor        | 80.75 | 89.97 |
|         tree        | 73.77 | 88.13 |
|       ceiling       |  83.5 | 92.03 |
|         road        | 81.78 |  89.8 |
|         bed         | 87.63 | 94.74 |
|      windowpane     | 61.04 | 77.41 |
|        grass        | 64.98 | 79.65 |
|       cabinet       | 59.13 | 72.31 |
|       sidewalk      | 62.23 |  75.8 |
|        person       | 79.01 | 90.85 |
|        earth        |  38.2 |  52.8 |
|         door        | 45.74 | 61.45 |
|        table        | 56.42 | 74.21 |
|       mountain      |  56.1 | 69.94 |
|        plant        | 50.27 |  62.6 |
|       curtain       |  73.3 | 85.36 |
|        chair        |  54.0 | 69.39 |
|         car         | 82.88 | 92.75 |
|        water        |  57.3 | 72.45 |
|       painting      |  68.1 | 82.61 |
|         sofa        | 64.76 |  81.1 |
|        shelf        |  44.0 |  62.8 |
|        house        | 49.13 | 63.81 |
|         sea         |  63.4 | 80.12 |
|        mirror       | 63.22 | 73.03 |
|         rug         | 65.33 | 71.89 |
|        field        | 26.25 |  43.2 |
|       armchair      | 42.18 | 62.31 |
|         seat        | 62.49 | 82.42 |
|        fence        | 35.89 |  50.4 |
|         desk        |  47.0 | 68.88 |
|         rock        |  47.7 | 72.41 |
|       wardrobe      | 45.67 | 62.34 |
|         lamp        | 52.63 | 67.18 |
|       bathtub       | 80.77 |  87.7 |
|       railing       | 33.82 | 49.25 |
|       cushion       | 52.56 | 62.72 |
|         base        | 32.81 | 49.73 |
|         box         |  25.2 | 36.86 |
|        column       | 42.04 | 53.72 |
|      signboard      | 31.35 |  41.8 |
|   chest of drawers  |  42.1 | 56.41 |
|       counter       | 28.02 | 34.15 |
|         sand        | 51.11 | 79.71 |
|         sink        | 66.08 | 74.17 |
|      skyscraper     |  58.9 | 73.85 |
|      fireplace      | 70.73 | 87.76 |
|     refrigerator    | 65.67 | 77.09 |
|      grandstand     | 49.47 | 82.96 |
|         path        | 26.22 |  36.9 |
|        stairs       |  25.0 | 35.46 |
|        runway       | 66.35 | 87.55 |
|         case        | 53.53 | 73.67 |
|      pool table     | 87.18 | 96.54 |
|        pillow       | 51.64 | 62.85 |
|     screen door     | 58.75 |  65.5 |
|       stairway      | 26.29 |  35.4 |
|        river        | 16.53 | 31.06 |
|        bridge       | 49.56 |  61.2 |
|       bookcase      |  39.9 | 61.61 |
|        blind        | 38.75 |  45.0 |
|     coffee table    | 55.79 |  78.8 |
|        toilet       |  78.4 | 89.68 |
|        flower       |  32.6 | 46.37 |
|         book        | 46.34 | 63.51 |
|         hill        |  8.52 | 11.56 |
|        bench        | 42.06 | 48.65 |
|      countertop     |  55.4 | 71.04 |
|        stove        | 65.08 | 76.35 |
|         palm        | 52.55 | 73.45 |
|    kitchen island   |  36.0 | 68.69 |
|       computer      | 71.88 | 86.94 |
|     swivel chair    |  39.5 | 55.79 |
|         boat        | 63.32 | 85.53 |
|         bar         | 52.44 | 67.39 |
|    arcade machine   | 78.12 | 83.97 |
|        hovel        | 47.38 | 67.15 |
|         bus         |  80.6 | 94.49 |
|        towel        | 52.84 | 72.95 |
|        light        | 40.62 | 44.99 |
|        truck        | 25.83 | 30.11 |
|        tower        | 21.45 | 35.58 |
|      chandelier     |  59.6 | 75.16 |
|        awning       | 23.92 | 29.26 |
|     streetlight     | 15.06 | 18.73 |
|        booth        | 42.62 | 47.38 |
| television receiver | 64.67 | 72.86 |
|       airplane      | 56.36 | 64.92 |
|      dirt track     |  0.85 |  2.21 |
|       apparel       | 35.19 | 45.69 |
|         pole        | 15.39 |  20.2 |
|         land        |  6.12 |  9.93 |
|      bannister      |  5.95 |  8.65 |
|      escalator      | 53.11 | 80.87 |
|       ottoman       | 41.87 | 56.55 |
|        bottle       | 33.29 |  51.4 |
|        buffet       | 48.55 |  60.7 |
|        poster       | 42.14 | 51.99 |
|        stage        | 20.55 | 41.31 |
|         van         | 38.99 | 47.16 |
|         ship        | 66.74 | 77.57 |
|       fountain      | 52.96 | 60.59 |
|    conveyer belt    | 74.24 | 93.25 |
|        canopy       | 42.42 | 54.88 |
|        washer       | 70.27 |  79.6 |
|      plaything      | 16.63 | 22.02 |
|    swimming pool    | 70.29 |  84.6 |
|        stool        | 31.93 |  41.0 |
|        barrel       |  53.7 |  63.0 |
|        basket       | 24.82 | 32.47 |
|      waterfall      | 51.83 |  61.5 |
|         tent        |  86.6 | 98.82 |
|         bag         |  8.66 |  9.66 |
|       minibike      | 66.18 | 79.57 |
|        cradle       | 60.05 | 83.72 |
|         oven        |  36.5 | 52.41 |
|         ball        | 29.96 | 33.24 |
|         food        | 55.05 | 75.43 |
|         step        |  9.59 | 11.94 |
|         tank        | 56.68 | 61.17 |
|      trade name     | 20.78 | 23.16 |
|      microwave      | 76.92 | 86.12 |
|         pot         | 39.14 | 44.79 |
|        animal       | 52.75 | 55.43 |
|       bicycle       | 50.99 | 72.14 |
|         lake        | 54.97 | 65.83 |
|      dishwasher     | 46.43 |  60.4 |
|        screen       | 66.35 | 87.64 |
|       blanket       | 10.17 | 12.09 |
|      sculpture      | 61.14 | 73.25 |
|         hood        | 57.32 | 66.16 |
|        sconce       | 29.92 | 36.23 |
|         vase        | 25.89 | 37.44 |
|    traffic light    | 23.23 | 36.59 |
|         tray        |  2.01 |  2.5  |
|        ashcan       | 34.09 | 47.67 |
|         fan         | 52.14 | 63.62 |
|         pier        | 49.98 | 58.67 |
|      crt screen     |  1.09 |  1.72 |
|        plate        | 50.04 |  66.8 |
|       monitor       |  56.7 | 71.34 |
|    bulletin board   | 46.31 | 55.58 |
|        shower       |  1.78 |  5.0  |
|       radiator      | 58.97 | 69.13 |
|        glass        |  7.91 |  8.19 |
|        clock        | 20.52 |  22.4 |
|         flag        | 60.08 | 66.78 |
+---------------------+-------+-------+
2023/12/04 13:48:46 - mmengine - INFO - Iter(test) [2000/2000]    aAcc: 82.3200  mIoU: 48.1400  mAcc: 60.2900  data_time: 0.0013  time: 0.3434
