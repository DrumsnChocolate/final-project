2024/02/07 17:22:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 566333089
    GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
    CUDA_HOME: /opt/cuda
    NVCC: Cuda compilation tools, release 12.3, V12.3.103
    GCC: gcc (GCC) 13.2.1 20230801
    PyTorch: 2.0.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.0
    OpenCV: 4.8.1
    MMEngine: 0.9.1

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 566333089
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/02/07 17:22:41 - mmengine - INFO - Config:
crop_size = (
    256,
    256,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        68.882,
        68.882,
        68.882,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        256,
        256,
    ),
    std=[
        66.631,
        66.631,
        66.631,
    ],
    test_cfg=dict(size=(
        256,
        256,
    )),
    type='SegDataPreProcessor')
data_root = 'data/cbis/cbis-linked'
dataset_type = 'CBISMonoDataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False,
        interval=10000,
        max_keep_ckpts=2,
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=None,
    backbone=dict(
        act_cfg=dict(type='ReLU'),
        base_channels=64,
        conv_cfg=None,
        dec_dilations=(
            1,
            1,
            1,
            1,
        ),
        dec_num_convs=(
            2,
            2,
            2,
            2,
        ),
        downsamples=(
            True,
            True,
            True,
            True,
        ),
        enc_dilations=(
            1,
            1,
            1,
            1,
            1,
        ),
        enc_num_convs=(
            2,
            2,
            2,
            2,
            2,
        ),
        in_channels=3,
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=5,
        strides=(
            1,
            1,
            1,
            1,
            1,
        ),
        type='UNet',
        upsample_cfg=dict(type='InterpConv'),
        with_cp=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            68.882,
            68.882,
            68.882,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            256,
            256,
        ),
        std=[
            66.631,
            66.631,
            66.631,
        ],
        test_cfg=dict(size=(
            256,
            256,
        )),
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=64,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=64,
        in_index=4,
        loss_decode=dict(loss_weight=1, naive_dice=True, type='DiceLoss'),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=1,
        num_convs=1,
        type='FCNHead'),
    pretrained=None,
    test_cfg=dict(crop_size=256, mode='whole', stride=170),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.0001, type='Adam'),
    type='OptimWrapper')
optimizer = dict(lr=0.0001, type='Adam')
param_scheduler = None
record_gpu_snapshot = False
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/test', seg_map_path='annotations_binary/test'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                256,
                256,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='CBISMonoDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
        'mAcc',
        'mFscore',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        256,
        256,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(max_iters=10000, type='IterBasedTrainLoop', val_interval=5000)
train_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/train', seg_map_path='annotations_binary/train'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(keep_ratio=True, scale=(
                256,
                256,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackSegInputs'),
        ],
        type='CBISMonoDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(keep_ratio=True, scale=(
        256,
        256,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = None
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/val', seg_map_path='annotations_binary/val'),
        data_root='data/cbis/cbis-linked',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                256,
                256,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='CBISMonoDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
        'mAcc',
        'mFscore',
    ], type='IoUMetric')
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        256,
        256,
    ), type='Resize'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256'

2024/02/07 17:22:42 - mmengine - INFO - Total parameters: 28986625
2024/02/07 17:22:42 - mmengine - INFO - Trainable parameters: 28986625
2024/02/07 17:22:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/02/07 17:22:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/02/07 17:22:42 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Name of parameter - Initialization information

backbone.encoder.0.0.convs.0.conv.weight - torch.Size([64, 3, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.0.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.0.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.0.0.convs.1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.0.0.convs.1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.0.0.convs.1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.1.1.convs.0.conv.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.1.1.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.1.1.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.1.1.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.1.1.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.1.1.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.2.1.convs.0.conv.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.2.1.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.2.1.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.2.1.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.2.1.convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.2.1.convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.3.1.convs.0.conv.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.3.1.convs.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.3.1.convs.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.3.1.convs.1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.3.1.convs.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.3.1.convs.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.4.1.convs.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.4.1.convs.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.4.1.convs.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.4.1.convs.1.conv.weight - torch.Size([1024, 1024, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.encoder.4.1.convs.1.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.encoder.4.1.convs.1.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.conv_block.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.0.conv_block.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.conv_block.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.conv_block.convs.1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.0.conv_block.convs.1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.conv_block.convs.1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.upsample.interp_upsample.1.conv.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.0.upsample.interp_upsample.1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.0.upsample.interp_upsample.1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.conv_block.convs.0.conv.weight - torch.Size([128, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.1.conv_block.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.conv_block.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.conv_block.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.1.conv_block.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.conv_block.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.upsample.interp_upsample.1.conv.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.1.upsample.interp_upsample.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.1.upsample.interp_upsample.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.conv_block.convs.0.conv.weight - torch.Size([256, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.2.conv_block.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.conv_block.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.conv_block.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.2.conv_block.convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.conv_block.convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.upsample.interp_upsample.1.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.2.upsample.interp_upsample.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.2.upsample.interp_upsample.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.conv_block.convs.0.conv.weight - torch.Size([512, 1024, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.3.conv_block.convs.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.conv_block.convs.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.conv_block.convs.1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.3.conv_block.convs.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.conv_block.convs.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.upsample.interp_upsample.1.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.decoder.3.upsample.interp_upsample.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.decoder.3.upsample.interp_upsample.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([1, 64, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2024/02/07 17:22:42 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/02/07 17:22:42 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/02/07 17:22:42 - mmengine - INFO - Checkpoints will be saved to /home/drumsnchocolate/Documents/Studie/Master/2022-2023/Thesis/Final Project/implementation/mmsegmentation/work_dirs/unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256/20240207_172240.
2024/02/07 17:22:48 - mmengine - INFO - Iter(train) [   50/10000]  lr: 1.0000e-04  eta: 0:18:00  time: 0.0888  data_time: 0.0250  memory: 4763  loss: 0.9874  decode.loss_dice: 0.9874  decode.acc_seg: 100.0000
2024/02/07 17:22:52 - mmengine - INFO - Iter(train) [  100/10000]  lr: 1.0000e-04  eta: 0:16:29  time: 0.1104  data_time: 0.0465  memory: 975  loss: 0.9904  decode.loss_dice: 0.9904  decode.acc_seg: 100.0000
2024/02/07 17:22:57 - mmengine - INFO - Iter(train) [  150/10000]  lr: 1.0000e-04  eta: 0:16:04  time: 0.0996  data_time: 0.0357  memory: 975  loss: 0.9885  decode.loss_dice: 0.9885  decode.acc_seg: 100.0000
2024/02/07 17:23:02 - mmengine - INFO - Iter(train) [  200/10000]  lr: 1.0000e-04  eta: 0:15:43  time: 0.0926  data_time: 0.0293  memory: 975  loss: 0.9787  decode.loss_dice: 0.9787  decode.acc_seg: 100.0000
2024/02/07 17:23:07 - mmengine - INFO - Iter(train) [  250/10000]  lr: 1.0000e-04  eta: 0:15:46  time: 0.1051  data_time: 0.0411  memory: 975  loss: 0.9619  decode.loss_dice: 0.9619  decode.acc_seg: 100.0000
2024/02/07 17:23:12 - mmengine - INFO - Iter(train) [  300/10000]  lr: 1.0000e-04  eta: 0:15:47  time: 0.0950  data_time: 0.0310  memory: 975  loss: 0.9903  decode.loss_dice: 0.9903  decode.acc_seg: 100.0000
2024/02/07 17:23:17 - mmengine - INFO - Iter(train) [  350/10000]  lr: 1.0000e-04  eta: 0:15:39  time: 0.0821  data_time: 0.0182  memory: 975  loss: 0.9639  decode.loss_dice: 0.9639  decode.acc_seg: 100.0000
2024/02/07 17:23:21 - mmengine - INFO - Iter(train) [  400/10000]  lr: 1.0000e-04  eta: 0:15:35  time: 0.0987  data_time: 0.0349  memory: 975  loss: 0.9895  decode.loss_dice: 0.9895  decode.acc_seg: 100.0000
2024/02/07 17:23:26 - mmengine - INFO - Iter(train) [  450/10000]  lr: 1.0000e-04  eta: 0:15:24  time: 0.0828  data_time: 0.0191  memory: 975  loss: 0.9797  decode.loss_dice: 0.9797  decode.acc_seg: 100.0000
2024/02/07 17:23:31 - mmengine - INFO - Iter(train) [  500/10000]  lr: 1.0000e-04  eta: 0:15:20  time: 0.0918  data_time: 0.0276  memory: 975  loss: 0.9887  decode.loss_dice: 0.9887  decode.acc_seg: 100.0000
2024/02/07 17:23:36 - mmengine - INFO - Iter(train) [  550/10000]  lr: 1.0000e-04  eta: 0:15:18  time: 0.0948  data_time: 0.0311  memory: 975  loss: 0.9461  decode.loss_dice: 0.9461  decode.acc_seg: 100.0000
2024/02/07 17:23:41 - mmengine - INFO - Iter(train) [  600/10000]  lr: 1.0000e-04  eta: 0:15:13  time: 0.0789  data_time: 0.0152  memory: 975  loss: 0.9767  decode.loss_dice: 0.9767  decode.acc_seg: 100.0000
2024/02/07 17:23:46 - mmengine - INFO - Iter(train) [  650/10000]  lr: 1.0000e-04  eta: 0:15:07  time: 0.0928  data_time: 0.0291  memory: 975  loss: 0.9672  decode.loss_dice: 0.9672  decode.acc_seg: 100.0000
2024/02/07 17:23:51 - mmengine - INFO - Iter(train) [  700/10000]  lr: 1.0000e-04  eta: 0:15:04  time: 0.0978  data_time: 0.0337  memory: 975  loss: 0.9624  decode.loss_dice: 0.9624  decode.acc_seg: 100.0000
2024/02/07 17:23:55 - mmengine - INFO - Iter(train) [  750/10000]  lr: 1.0000e-04  eta: 0:14:52  time: 0.0751  data_time: 0.0110  memory: 975  loss: 0.9265  decode.loss_dice: 0.9265  decode.acc_seg: 100.0000
2024/02/07 17:24:00 - mmengine - INFO - Iter(train) [  800/10000]  lr: 1.0000e-04  eta: 0:14:50  time: 0.0979  data_time: 0.0348  memory: 975  loss: 0.9792  decode.loss_dice: 0.9792  decode.acc_seg: 100.0000
2024/02/07 17:24:05 - mmengine - INFO - Iter(train) [  850/10000]  lr: 1.0000e-04  eta: 0:14:47  time: 0.0829  data_time: 0.0198  memory: 975  loss: 0.9516  decode.loss_dice: 0.9516  decode.acc_seg: 100.0000
2024/02/07 17:24:09 - mmengine - INFO - Iter(train) [  900/10000]  lr: 1.0000e-04  eta: 0:14:40  time: 0.0712  data_time: 0.0082  memory: 975  loss: 0.9635  decode.loss_dice: 0.9635  decode.acc_seg: 100.0000
2024/02/07 17:24:14 - mmengine - INFO - Iter(train) [  950/10000]  lr: 1.0000e-04  eta: 0:14:33  time: 0.0858  data_time: 0.0229  memory: 975  loss: 0.9799  decode.loss_dice: 0.9799  decode.acc_seg: 100.0000
2024/02/07 17:24:19 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:24:19 - mmengine - INFO - Iter(train) [ 1000/10000]  lr: 1.0000e-04  eta: 0:14:25  time: 0.0907  data_time: 0.0268  memory: 975  loss: 0.9544  decode.loss_dice: 0.9544  decode.acc_seg: 100.0000
2024/02/07 17:24:23 - mmengine - INFO - Iter(train) [ 1050/10000]  lr: 1.0000e-04  eta: 0:14:18  time: 0.0954  data_time: 0.0322  memory: 975  loss: 0.9675  decode.loss_dice: 0.9675  decode.acc_seg: 100.0000
2024/02/07 17:24:28 - mmengine - INFO - Iter(train) [ 1100/10000]  lr: 1.0000e-04  eta: 0:14:11  time: 0.1017  data_time: 0.0378  memory: 975  loss: 0.9384  decode.loss_dice: 0.9384  decode.acc_seg: 100.0000
2024/02/07 17:24:32 - mmengine - INFO - Iter(train) [ 1150/10000]  lr: 1.0000e-04  eta: 0:14:06  time: 0.1102  data_time: 0.0472  memory: 975  loss: 0.9590  decode.loss_dice: 0.9590  decode.acc_seg: 100.0000
2024/02/07 17:24:38 - mmengine - INFO - Iter(train) [ 1200/10000]  lr: 1.0000e-04  eta: 0:14:05  time: 0.1027  data_time: 0.0395  memory: 975  loss: 0.9733  decode.loss_dice: 0.9733  decode.acc_seg: 100.0000
2024/02/07 17:24:42 - mmengine - INFO - Iter(train) [ 1250/10000]  lr: 1.0000e-04  eta: 0:13:59  time: 0.0664  data_time: 0.0033  memory: 975  loss: 0.9761  decode.loss_dice: 0.9761  decode.acc_seg: 100.0000
2024/02/07 17:24:47 - mmengine - INFO - Iter(train) [ 1300/10000]  lr: 1.0000e-04  eta: 0:13:53  time: 0.1130  data_time: 0.0500  memory: 975  loss: 0.9659  decode.loss_dice: 0.9659  decode.acc_seg: 100.0000
2024/02/07 17:24:52 - mmengine - INFO - Iter(train) [ 1350/10000]  lr: 1.0000e-04  eta: 0:13:50  time: 0.0952  data_time: 0.0314  memory: 975  loss: 0.9782  decode.loss_dice: 0.9782  decode.acc_seg: 100.0000
2024/02/07 17:24:57 - mmengine - INFO - Iter(train) [ 1400/10000]  lr: 1.0000e-04  eta: 0:13:44  time: 0.0969  data_time: 0.0328  memory: 975  loss: 0.9694  decode.loss_dice: 0.9694  decode.acc_seg: 100.0000
2024/02/07 17:25:01 - mmengine - INFO - Iter(train) [ 1450/10000]  lr: 1.0000e-04  eta: 0:13:39  time: 0.0863  data_time: 0.0223  memory: 975  loss: 0.9365  decode.loss_dice: 0.9365  decode.acc_seg: 100.0000
2024/02/07 17:25:06 - mmengine - INFO - Iter(train) [ 1500/10000]  lr: 1.0000e-04  eta: 0:13:35  time: 0.0900  data_time: 0.0261  memory: 975  loss: 0.9718  decode.loss_dice: 0.9718  decode.acc_seg: 100.0000
2024/02/07 17:25:11 - mmengine - INFO - Iter(train) [ 1550/10000]  lr: 1.0000e-04  eta: 0:13:30  time: 0.0916  data_time: 0.0278  memory: 975  loss: 0.9390  decode.loss_dice: 0.9390  decode.acc_seg: 100.0000
2024/02/07 17:25:16 - mmengine - INFO - Iter(train) [ 1600/10000]  lr: 1.0000e-04  eta: 0:13:27  time: 0.0963  data_time: 0.0324  memory: 975  loss: 0.9404  decode.loss_dice: 0.9404  decode.acc_seg: 100.0000
2024/02/07 17:25:21 - mmengine - INFO - Iter(train) [ 1650/10000]  lr: 1.0000e-04  eta: 0:13:24  time: 0.1202  data_time: 0.0563  memory: 975  loss: 0.9412  decode.loss_dice: 0.9412  decode.acc_seg: 100.0000
2024/02/07 17:25:26 - mmengine - INFO - Iter(train) [ 1700/10000]  lr: 1.0000e-04  eta: 0:13:20  time: 0.0885  data_time: 0.0245  memory: 975  loss: 0.9165  decode.loss_dice: 0.9165  decode.acc_seg: 100.0000
2024/02/07 17:25:31 - mmengine - INFO - Iter(train) [ 1750/10000]  lr: 1.0000e-04  eta: 0:13:12  time: 0.0958  data_time: 0.0317  memory: 975  loss: 0.9609  decode.loss_dice: 0.9609  decode.acc_seg: 100.0000
2024/02/07 17:25:35 - mmengine - INFO - Iter(train) [ 1800/10000]  lr: 1.0000e-04  eta: 0:13:06  time: 0.0794  data_time: 0.0155  memory: 975  loss: 0.9204  decode.loss_dice: 0.9204  decode.acc_seg: 100.0000
2024/02/07 17:25:40 - mmengine - INFO - Iter(train) [ 1850/10000]  lr: 1.0000e-04  eta: 0:13:00  time: 0.0926  data_time: 0.0286  memory: 975  loss: 0.9279  decode.loss_dice: 0.9279  decode.acc_seg: 100.0000
2024/02/07 17:25:45 - mmengine - INFO - Iter(train) [ 1900/10000]  lr: 1.0000e-04  eta: 0:12:57  time: 0.1123  data_time: 0.0476  memory: 975  loss: 0.9673  decode.loss_dice: 0.9673  decode.acc_seg: 100.0000
2024/02/07 17:25:50 - mmengine - INFO - Iter(train) [ 1950/10000]  lr: 1.0000e-04  eta: 0:12:54  time: 0.1132  data_time: 0.0474  memory: 975  loss: 0.9035  decode.loss_dice: 0.9035  decode.acc_seg: 100.0000
2024/02/07 17:25:55 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:25:55 - mmengine - INFO - Iter(train) [ 2000/10000]  lr: 1.0000e-04  eta: 0:12:48  time: 0.0925  data_time: 0.0275  memory: 975  loss: 0.9206  decode.loss_dice: 0.9206  decode.acc_seg: 100.0000
2024/02/07 17:25:59 - mmengine - INFO - Iter(train) [ 2050/10000]  lr: 1.0000e-04  eta: 0:12:42  time: 0.0882  data_time: 0.0222  memory: 975  loss: 0.9523  decode.loss_dice: 0.9523  decode.acc_seg: 100.0000
2024/02/07 17:26:04 - mmengine - INFO - Iter(train) [ 2100/10000]  lr: 1.0000e-04  eta: 0:12:39  time: 0.0896  data_time: 0.0246  memory: 975  loss: 0.9447  decode.loss_dice: 0.9447  decode.acc_seg: 100.0000
2024/02/07 17:26:09 - mmengine - INFO - Iter(train) [ 2150/10000]  lr: 1.0000e-04  eta: 0:12:35  time: 0.1228  data_time: 0.0583  memory: 975  loss: 0.9714  decode.loss_dice: 0.9714  decode.acc_seg: 100.0000
2024/02/07 17:26:14 - mmengine - INFO - Iter(train) [ 2200/10000]  lr: 1.0000e-04  eta: 0:12:30  time: 0.0909  data_time: 0.0254  memory: 975  loss: 0.9503  decode.loss_dice: 0.9503  decode.acc_seg: 100.0000
2024/02/07 17:26:15 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:26:20 - mmengine - INFO - Iter(train) [ 2250/10000]  lr: 1.0000e-04  eta: 0:12:28  time: 0.1294  data_time: 0.0625  memory: 975  loss: 0.9696  decode.loss_dice: 0.9696  decode.acc_seg: 100.0000
2024/02/07 17:26:24 - mmengine - INFO - Iter(train) [ 2300/10000]  lr: 1.0000e-04  eta: 0:12:22  time: 0.0744  data_time: 0.0087  memory: 975  loss: 0.8352  decode.loss_dice: 0.8352  decode.acc_seg: 100.0000
2024/02/07 17:26:29 - mmengine - INFO - Iter(train) [ 2350/10000]  lr: 1.0000e-04  eta: 0:12:17  time: 0.0802  data_time: 0.0167  memory: 975  loss: 0.9189  decode.loss_dice: 0.9189  decode.acc_seg: 100.0000
2024/02/07 17:26:34 - mmengine - INFO - Iter(train) [ 2400/10000]  lr: 1.0000e-04  eta: 0:12:12  time: 0.0899  data_time: 0.0234  memory: 975  loss: 0.9430  decode.loss_dice: 0.9430  decode.acc_seg: 100.0000
2024/02/07 17:26:39 - mmengine - INFO - Iter(train) [ 2450/10000]  lr: 1.0000e-04  eta: 0:12:07  time: 0.0931  data_time: 0.0266  memory: 975  loss: 0.9144  decode.loss_dice: 0.9144  decode.acc_seg: 100.0000
2024/02/07 17:26:44 - mmengine - INFO - Iter(train) [ 2500/10000]  lr: 1.0000e-04  eta: 0:12:04  time: 0.1124  data_time: 0.0463  memory: 975  loss: 0.9478  decode.loss_dice: 0.9478  decode.acc_seg: 100.0000
2024/02/07 17:26:49 - mmengine - INFO - Iter(train) [ 2550/10000]  lr: 1.0000e-04  eta: 0:12:00  time: 0.1010  data_time: 0.0342  memory: 975  loss: 0.9226  decode.loss_dice: 0.9226  decode.acc_seg: 100.0000
2024/02/07 17:26:55 - mmengine - INFO - Iter(train) [ 2600/10000]  lr: 1.0000e-04  eta: 0:11:58  time: 0.1195  data_time: 0.0522  memory: 975  loss: 0.9216  decode.loss_dice: 0.9216  decode.acc_seg: 100.0000
2024/02/07 17:27:00 - mmengine - INFO - Iter(train) [ 2650/10000]  lr: 1.0000e-04  eta: 0:11:55  time: 0.1122  data_time: 0.0448  memory: 975  loss: 0.9280  decode.loss_dice: 0.9280  decode.acc_seg: 100.0000
2024/02/07 17:27:06 - mmengine - INFO - Iter(train) [ 2700/10000]  lr: 1.0000e-04  eta: 0:11:52  time: 0.1174  data_time: 0.0504  memory: 975  loss: 0.8469  decode.loss_dice: 0.8469  decode.acc_seg: 100.0000
2024/02/07 17:27:12 - mmengine - INFO - Iter(train) [ 2750/10000]  lr: 1.0000e-04  eta: 0:11:49  time: 0.0906  data_time: 0.0242  memory: 975  loss: 0.9069  decode.loss_dice: 0.9069  decode.acc_seg: 100.0000
2024/02/07 17:27:17 - mmengine - INFO - Iter(train) [ 2800/10000]  lr: 1.0000e-04  eta: 0:11:46  time: 0.1138  data_time: 0.0458  memory: 975  loss: 0.8543  decode.loss_dice: 0.8543  decode.acc_seg: 100.0000
2024/02/07 17:27:23 - mmengine - INFO - Iter(train) [ 2850/10000]  lr: 1.0000e-04  eta: 0:11:44  time: 0.1009  data_time: 0.0331  memory: 975  loss: 0.9277  decode.loss_dice: 0.9277  decode.acc_seg: 100.0000
2024/02/07 17:27:28 - mmengine - INFO - Iter(train) [ 2900/10000]  lr: 1.0000e-04  eta: 0:11:39  time: 0.0826  data_time: 0.0147  memory: 975  loss: 0.8934  decode.loss_dice: 0.8934  decode.acc_seg: 100.0000
2024/02/07 17:27:33 - mmengine - INFO - Iter(train) [ 2950/10000]  lr: 1.0000e-04  eta: 0:11:35  time: 0.0989  data_time: 0.0312  memory: 975  loss: 0.8683  decode.loss_dice: 0.8683  decode.acc_seg: 100.0000
2024/02/07 17:27:39 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:27:39 - mmengine - INFO - Iter(train) [ 3000/10000]  lr: 1.0000e-04  eta: 0:11:31  time: 0.1164  data_time: 0.0492  memory: 975  loss: 0.8867  decode.loss_dice: 0.8867  decode.acc_seg: 100.0000
2024/02/07 17:27:44 - mmengine - INFO - Iter(train) [ 3050/10000]  lr: 1.0000e-04  eta: 0:11:26  time: 0.1000  data_time: 0.0335  memory: 975  loss: 0.8478  decode.loss_dice: 0.8478  decode.acc_seg: 100.0000
2024/02/07 17:27:49 - mmengine - INFO - Iter(train) [ 3100/10000]  lr: 1.0000e-04  eta: 0:11:22  time: 0.0992  data_time: 0.0325  memory: 975  loss: 0.8942  decode.loss_dice: 0.8942  decode.acc_seg: 100.0000
2024/02/07 17:27:54 - mmengine - INFO - Iter(train) [ 3150/10000]  lr: 1.0000e-04  eta: 0:11:17  time: 0.0940  data_time: 0.0271  memory: 975  loss: 0.9218  decode.loss_dice: 0.9218  decode.acc_seg: 100.0000
2024/02/07 17:27:59 - mmengine - INFO - Iter(train) [ 3200/10000]  lr: 1.0000e-04  eta: 0:11:13  time: 0.1183  data_time: 0.0514  memory: 975  loss: 0.9156  decode.loss_dice: 0.9156  decode.acc_seg: 100.0000
2024/02/07 17:28:04 - mmengine - INFO - Iter(train) [ 3250/10000]  lr: 1.0000e-04  eta: 0:11:08  time: 0.0917  data_time: 0.0242  memory: 975  loss: 0.9160  decode.loss_dice: 0.9160  decode.acc_seg: 100.0000
2024/02/07 17:28:10 - mmengine - INFO - Iter(train) [ 3300/10000]  lr: 1.0000e-04  eta: 0:11:04  time: 0.1062  data_time: 0.0388  memory: 975  loss: 0.8554  decode.loss_dice: 0.8554  decode.acc_seg: 100.0000
2024/02/07 17:28:15 - mmengine - INFO - Iter(train) [ 3350/10000]  lr: 1.0000e-04  eta: 0:10:59  time: 0.1158  data_time: 0.0495  memory: 975  loss: 0.8226  decode.loss_dice: 0.8226  decode.acc_seg: 100.0000
2024/02/07 17:28:20 - mmengine - INFO - Iter(train) [ 3400/10000]  lr: 1.0000e-04  eta: 0:10:54  time: 0.0985  data_time: 0.0305  memory: 975  loss: 0.8886  decode.loss_dice: 0.8886  decode.acc_seg: 100.0000
2024/02/07 17:28:24 - mmengine - INFO - Iter(train) [ 3450/10000]  lr: 1.0000e-04  eta: 0:10:48  time: 0.0980  data_time: 0.0302  memory: 975  loss: 0.8779  decode.loss_dice: 0.8779  decode.acc_seg: 100.0000
2024/02/07 17:28:30 - mmengine - INFO - Iter(train) [ 3500/10000]  lr: 1.0000e-04  eta: 0:10:44  time: 0.0769  data_time: 0.0094  memory: 975  loss: 0.9268  decode.loss_dice: 0.9268  decode.acc_seg: 100.0000
2024/02/07 17:28:34 - mmengine - INFO - Iter(train) [ 3550/10000]  lr: 1.0000e-04  eta: 0:10:39  time: 0.0942  data_time: 0.0267  memory: 975  loss: 0.8131  decode.loss_dice: 0.8131  decode.acc_seg: 100.0000
2024/02/07 17:28:39 - mmengine - INFO - Iter(train) [ 3600/10000]  lr: 1.0000e-04  eta: 0:10:34  time: 0.1051  data_time: 0.0372  memory: 975  loss: 0.9009  decode.loss_dice: 0.9009  decode.acc_seg: 100.0000
2024/02/07 17:28:44 - mmengine - INFO - Iter(train) [ 3650/10000]  lr: 1.0000e-04  eta: 0:10:29  time: 0.1378  data_time: 0.0706  memory: 975  loss: 0.8997  decode.loss_dice: 0.8997  decode.acc_seg: 100.0000
2024/02/07 17:28:49 - mmengine - INFO - Iter(train) [ 3700/10000]  lr: 1.0000e-04  eta: 0:10:23  time: 0.0956  data_time: 0.0283  memory: 975  loss: 0.8821  decode.loss_dice: 0.8821  decode.acc_seg: 100.0000
2024/02/07 17:28:53 - mmengine - INFO - Iter(train) [ 3750/10000]  lr: 1.0000e-04  eta: 0:10:18  time: 0.0836  data_time: 0.0157  memory: 975  loss: 0.9511  decode.loss_dice: 0.9511  decode.acc_seg: 100.0000
2024/02/07 17:28:59 - mmengine - INFO - Iter(train) [ 3800/10000]  lr: 1.0000e-04  eta: 0:10:14  time: 0.0882  data_time: 0.0204  memory: 975  loss: 0.7682  decode.loss_dice: 0.7682  decode.acc_seg: 100.0000
2024/02/07 17:29:04 - mmengine - INFO - Iter(train) [ 3850/10000]  lr: 1.0000e-04  eta: 0:10:08  time: 0.0931  data_time: 0.0254  memory: 975  loss: 0.8304  decode.loss_dice: 0.8304  decode.acc_seg: 100.0000
2024/02/07 17:29:08 - mmengine - INFO - Iter(train) [ 3900/10000]  lr: 1.0000e-04  eta: 0:10:03  time: 0.1145  data_time: 0.0467  memory: 975  loss: 0.8468  decode.loss_dice: 0.8468  decode.acc_seg: 100.0000
2024/02/07 17:29:14 - mmengine - INFO - Iter(train) [ 3950/10000]  lr: 1.0000e-04  eta: 0:09:59  time: 0.1092  data_time: 0.0418  memory: 975  loss: 0.8332  decode.loss_dice: 0.8332  decode.acc_seg: 100.0000
2024/02/07 17:29:19 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:29:19 - mmengine - INFO - Iter(train) [ 4000/10000]  lr: 1.0000e-04  eta: 0:09:55  time: 0.1189  data_time: 0.0508  memory: 975  loss: 0.9160  decode.loss_dice: 0.9160  decode.acc_seg: 100.0000
2024/02/07 17:29:24 - mmengine - INFO - Iter(train) [ 4050/10000]  lr: 1.0000e-04  eta: 0:09:50  time: 0.0889  data_time: 0.0212  memory: 975  loss: 0.8866  decode.loss_dice: 0.8866  decode.acc_seg: 100.0000
2024/02/07 17:29:29 - mmengine - INFO - Iter(train) [ 4100/10000]  lr: 1.0000e-04  eta: 0:09:44  time: 0.0840  data_time: 0.0173  memory: 975  loss: 0.8708  decode.loss_dice: 0.8708  decode.acc_seg: 100.0000
2024/02/07 17:29:34 - mmengine - INFO - Iter(train) [ 4150/10000]  lr: 1.0000e-04  eta: 0:09:39  time: 0.1013  data_time: 0.0336  memory: 975  loss: 0.9148  decode.loss_dice: 0.9148  decode.acc_seg: 100.0000
2024/02/07 17:29:39 - mmengine - INFO - Iter(train) [ 4200/10000]  lr: 1.0000e-04  eta: 0:09:34  time: 0.0776  data_time: 0.0102  memory: 975  loss: 0.8498  decode.loss_dice: 0.8498  decode.acc_seg: 100.0000
2024/02/07 17:29:44 - mmengine - INFO - Iter(train) [ 4250/10000]  lr: 1.0000e-04  eta: 0:09:30  time: 0.1074  data_time: 0.0410  memory: 975  loss: 0.8080  decode.loss_dice: 0.8080  decode.acc_seg: 100.0000
2024/02/07 17:29:49 - mmengine - INFO - Iter(train) [ 4300/10000]  lr: 1.0000e-04  eta: 0:09:25  time: 0.0983  data_time: 0.0315  memory: 975  loss: 0.8827  decode.loss_dice: 0.8827  decode.acc_seg: 100.0000
2024/02/07 17:29:54 - mmengine - INFO - Iter(train) [ 4350/10000]  lr: 1.0000e-04  eta: 0:09:20  time: 0.1069  data_time: 0.0407  memory: 975  loss: 0.8674  decode.loss_dice: 0.8674  decode.acc_seg: 100.0000
2024/02/07 17:30:00 - mmengine - INFO - Iter(train) [ 4400/10000]  lr: 1.0000e-04  eta: 0:09:16  time: 0.1529  data_time: 0.0859  memory: 975  loss: 0.8088  decode.loss_dice: 0.8088  decode.acc_seg: 100.0000
2024/02/07 17:30:05 - mmengine - INFO - Iter(train) [ 4450/10000]  lr: 1.0000e-04  eta: 0:09:11  time: 0.0903  data_time: 0.0239  memory: 975  loss: 0.8945  decode.loss_dice: 0.8945  decode.acc_seg: 100.0000
2024/02/07 17:30:11 - mmengine - INFO - Iter(train) [ 4500/10000]  lr: 1.0000e-04  eta: 0:09:07  time: 0.0932  data_time: 0.0263  memory: 975  loss: 0.8706  decode.loss_dice: 0.8706  decode.acc_seg: 100.0000
2024/02/07 17:30:16 - mmengine - INFO - Iter(train) [ 4550/10000]  lr: 1.0000e-04  eta: 0:09:02  time: 0.0973  data_time: 0.0301  memory: 975  loss: 0.8510  decode.loss_dice: 0.8510  decode.acc_seg: 100.0000
2024/02/07 17:30:21 - mmengine - INFO - Iter(train) [ 4600/10000]  lr: 1.0000e-04  eta: 0:08:58  time: 0.0811  data_time: 0.0143  memory: 975  loss: 0.9148  decode.loss_dice: 0.9148  decode.acc_seg: 100.0000
2024/02/07 17:30:25 - mmengine - INFO - Iter(train) [ 4650/10000]  lr: 1.0000e-04  eta: 0:08:52  time: 0.1119  data_time: 0.0452  memory: 975  loss: 0.8957  decode.loss_dice: 0.8957  decode.acc_seg: 100.0000
2024/02/07 17:30:31 - mmengine - INFO - Iter(train) [ 4700/10000]  lr: 1.0000e-04  eta: 0:08:48  time: 0.0988  data_time: 0.0322  memory: 975  loss: 0.9230  decode.loss_dice: 0.9230  decode.acc_seg: 100.0000
2024/02/07 17:30:36 - mmengine - INFO - Iter(train) [ 4750/10000]  lr: 1.0000e-04  eta: 0:08:42  time: 0.0764  data_time: 0.0098  memory: 975  loss: 0.9318  decode.loss_dice: 0.9318  decode.acc_seg: 100.0000
2024/02/07 17:30:40 - mmengine - INFO - Iter(train) [ 4800/10000]  lr: 1.0000e-04  eta: 0:08:37  time: 0.1216  data_time: 0.0548  memory: 975  loss: 0.9268  decode.loss_dice: 0.9268  decode.acc_seg: 100.0000
2024/02/07 17:30:45 - mmengine - INFO - Iter(train) [ 4850/10000]  lr: 1.0000e-04  eta: 0:08:32  time: 0.1164  data_time: 0.0500  memory: 975  loss: 0.8541  decode.loss_dice: 0.8541  decode.acc_seg: 100.0000
2024/02/07 17:30:50 - mmengine - INFO - Iter(train) [ 4900/10000]  lr: 1.0000e-04  eta: 0:08:27  time: 0.1372  data_time: 0.0705  memory: 975  loss: 0.8851  decode.loss_dice: 0.8851  decode.acc_seg: 100.0000
2024/02/07 17:30:55 - mmengine - INFO - Iter(train) [ 4950/10000]  lr: 1.0000e-04  eta: 0:08:22  time: 0.1099  data_time: 0.0437  memory: 975  loss: 0.8248  decode.loss_dice: 0.8248  decode.acc_seg: 100.0000
2024/02/07 17:31:01 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:31:01 - mmengine - INFO - Iter(train) [ 5000/10000]  lr: 1.0000e-04  eta: 0:08:18  time: 0.1006  data_time: 0.0332  memory: 975  loss: 0.7516  decode.loss_dice: 0.7516  decode.acc_seg: 100.0000
2024/02/07 17:31:05 - mmengine - INFO - Iter(val) [ 50/246]    eta: 0:00:16  time: 0.0569  data_time: 0.0113  memory: 905  
2024/02/07 17:31:09 - mmengine - INFO - Iter(val) [100/246]    eta: 0:00:11  time: 0.1102  data_time: 0.0624  memory: 1021  
2024/02/07 17:31:13 - mmengine - INFO - Iter(val) [150/246]    eta: 0:00:07  time: 0.0783  data_time: 0.0290  memory: 896  
2024/02/07 17:31:17 - mmengine - INFO - Iter(val) [200/246]    eta: 0:00:03  time: 0.0872  data_time: 0.0391  memory: 922  
2024/02/07 17:31:20 - mmengine - INFO - per class results:
2024/02/07 17:31:20 - mmengine - INFO - 
+-------+------+-------+--------+-----------+--------+
| Class | IoU  |  Acc  | Fscore | Precision | Recall |
+-------+------+-------+--------+-----------+--------+
|  roi  | 8.03 | 39.73 |  12.7  |   12.45   | 39.73  |
+-------+------+-------+--------+-----------+--------+
2024/02/07 17:31:20 - mmengine - INFO - Iter(val) [246/246]    aAcc: 39.7300  mIoU: 8.0300  mAcc: 39.7300  mFscore: 12.7000  mPrecision: 12.4500  mRecall: 39.7300  data_time: 0.0313  time: 0.0794
2024/02/07 17:31:25 - mmengine - INFO - Iter(train) [ 5050/10000]  lr: 1.0000e-04  eta: 0:08:12  time: 0.0969  data_time: 0.0299  memory: 975  loss: 0.8022  decode.loss_dice: 0.8022  decode.acc_seg: 100.0000
2024/02/07 17:31:30 - mmengine - INFO - Iter(train) [ 5100/10000]  lr: 1.0000e-04  eta: 0:08:07  time: 0.0933  data_time: 0.0266  memory: 975  loss: 0.8172  decode.loss_dice: 0.8172  decode.acc_seg: 100.0000
2024/02/07 17:31:35 - mmengine - INFO - Iter(train) [ 5150/10000]  lr: 1.0000e-04  eta: 0:08:02  time: 0.1095  data_time: 0.0434  memory: 975  loss: 0.8597  decode.loss_dice: 0.8597  decode.acc_seg: 100.0000
2024/02/07 17:31:39 - mmengine - INFO - Iter(train) [ 5200/10000]  lr: 1.0000e-04  eta: 0:07:57  time: 0.1037  data_time: 0.0378  memory: 975  loss: 0.8297  decode.loss_dice: 0.8297  decode.acc_seg: 100.0000
2024/02/07 17:31:45 - mmengine - INFO - Iter(train) [ 5250/10000]  lr: 1.0000e-04  eta: 0:07:52  time: 0.1178  data_time: 0.0508  memory: 975  loss: 0.9103  decode.loss_dice: 0.9103  decode.acc_seg: 100.0000
2024/02/07 17:31:50 - mmengine - INFO - Iter(train) [ 5300/10000]  lr: 1.0000e-04  eta: 0:07:47  time: 0.1025  data_time: 0.0350  memory: 975  loss: 0.8204  decode.loss_dice: 0.8204  decode.acc_seg: 100.0000
2024/02/07 17:31:55 - mmengine - INFO - Iter(train) [ 5350/10000]  lr: 1.0000e-04  eta: 0:07:43  time: 0.1027  data_time: 0.0333  memory: 975  loss: 0.8781  decode.loss_dice: 0.8781  decode.acc_seg: 100.0000
2024/02/07 17:32:02 - mmengine - INFO - Iter(train) [ 5400/10000]  lr: 1.0000e-04  eta: 0:07:40  time: 0.1164  data_time: 0.0489  memory: 975  loss: 0.7987  decode.loss_dice: 0.7987  decode.acc_seg: 100.0000
2024/02/07 17:32:09 - mmengine - INFO - Iter(train) [ 5450/10000]  lr: 1.0000e-04  eta: 0:07:36  time: 0.1231  data_time: 0.0535  memory: 975  loss: 0.9198  decode.loss_dice: 0.9198  decode.acc_seg: 100.0000
2024/02/07 17:32:16 - mmengine - INFO - Iter(train) [ 5500/10000]  lr: 1.0000e-04  eta: 0:07:32  time: 0.1293  data_time: 0.0614  memory: 975  loss: 0.8134  decode.loss_dice: 0.8134  decode.acc_seg: 100.0000
2024/02/07 17:32:22 - mmengine - INFO - Iter(train) [ 5550/10000]  lr: 1.0000e-04  eta: 0:07:28  time: 0.1135  data_time: 0.0444  memory: 975  loss: 0.7494  decode.loss_dice: 0.7494  decode.acc_seg: 100.0000
2024/02/07 17:32:28 - mmengine - INFO - Iter(train) [ 5600/10000]  lr: 1.0000e-04  eta: 0:07:24  time: 0.1065  data_time: 0.0384  memory: 975  loss: 0.8418  decode.loss_dice: 0.8418  decode.acc_seg: 100.0000
2024/02/07 17:32:34 - mmengine - INFO - Iter(train) [ 5650/10000]  lr: 1.0000e-04  eta: 0:07:20  time: 0.1081  data_time: 0.0401  memory: 975  loss: 0.8787  decode.loss_dice: 0.8787  decode.acc_seg: 100.0000
2024/02/07 17:32:39 - mmengine - INFO - Iter(train) [ 5700/10000]  lr: 1.0000e-04  eta: 0:07:15  time: 0.0945  data_time: 0.0264  memory: 975  loss: 0.7190  decode.loss_dice: 0.7190  decode.acc_seg: 100.0000
2024/02/07 17:32:45 - mmengine - INFO - Iter(train) [ 5750/10000]  lr: 1.0000e-04  eta: 0:07:11  time: 0.1465  data_time: 0.0776  memory: 975  loss: 0.6799  decode.loss_dice: 0.6799  decode.acc_seg: 100.0000
2024/02/07 17:32:52 - mmengine - INFO - Iter(train) [ 5800/10000]  lr: 1.0000e-04  eta: 0:07:07  time: 0.1037  data_time: 0.0353  memory: 975  loss: 0.7756  decode.loss_dice: 0.7756  decode.acc_seg: 100.0000
2024/02/07 17:32:58 - mmengine - INFO - Iter(train) [ 5850/10000]  lr: 1.0000e-04  eta: 0:07:02  time: 0.1191  data_time: 0.0498  memory: 975  loss: 0.9323  decode.loss_dice: 0.9323  decode.acc_seg: 100.0000
2024/02/07 17:33:03 - mmengine - INFO - Iter(train) [ 5900/10000]  lr: 1.0000e-04  eta: 0:06:57  time: 0.1168  data_time: 0.0477  memory: 975  loss: 0.8532  decode.loss_dice: 0.8532  decode.acc_seg: 100.0000
2024/02/07 17:33:09 - mmengine - INFO - Iter(train) [ 5950/10000]  lr: 1.0000e-04  eta: 0:06:53  time: 0.1164  data_time: 0.0487  memory: 975  loss: 0.8842  decode.loss_dice: 0.8842  decode.acc_seg: 100.0000
2024/02/07 17:33:15 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:33:15 - mmengine - INFO - Iter(train) [ 6000/10000]  lr: 1.0000e-04  eta: 0:06:48  time: 0.1051  data_time: 0.0367  memory: 975  loss: 0.8370  decode.loss_dice: 0.8370  decode.acc_seg: 100.0000
2024/02/07 17:33:21 - mmengine - INFO - Iter(train) [ 6050/10000]  lr: 1.0000e-04  eta: 0:06:44  time: 0.0956  data_time: 0.0272  memory: 975  loss: 0.8198  decode.loss_dice: 0.8198  decode.acc_seg: 100.0000
2024/02/07 17:33:28 - mmengine - INFO - Iter(train) [ 6100/10000]  lr: 1.0000e-04  eta: 0:06:39  time: 0.1363  data_time: 0.0677  memory: 975  loss: 0.8700  decode.loss_dice: 0.8700  decode.acc_seg: 100.0000
2024/02/07 17:33:33 - mmengine - INFO - Iter(train) [ 6150/10000]  lr: 1.0000e-04  eta: 0:06:35  time: 0.1254  data_time: 0.0574  memory: 975  loss: 0.9247  decode.loss_dice: 0.9247  decode.acc_seg: 100.0000
2024/02/07 17:33:39 - mmengine - INFO - Iter(train) [ 6200/10000]  lr: 1.0000e-04  eta: 0:06:30  time: 0.1201  data_time: 0.0520  memory: 975  loss: 0.8399  decode.loss_dice: 0.8399  decode.acc_seg: 100.0000
2024/02/07 17:33:46 - mmengine - INFO - Iter(train) [ 6250/10000]  lr: 1.0000e-04  eta: 0:06:26  time: 0.1456  data_time: 0.0770  memory: 975  loss: 0.7285  decode.loss_dice: 0.7285  decode.acc_seg: 100.0000
2024/02/07 17:33:52 - mmengine - INFO - Iter(train) [ 6300/10000]  lr: 1.0000e-04  eta: 0:06:21  time: 0.1972  data_time: 0.1208  memory: 975  loss: 0.9552  decode.loss_dice: 0.9552  decode.acc_seg: 100.0000
2024/02/07 17:33:58 - mmengine - INFO - Iter(train) [ 6350/10000]  lr: 1.0000e-04  eta: 0:06:17  time: 0.1003  data_time: 0.0309  memory: 975  loss: 0.7137  decode.loss_dice: 0.7137  decode.acc_seg: 100.0000
2024/02/07 17:34:04 - mmengine - INFO - Iter(train) [ 6400/10000]  lr: 1.0000e-04  eta: 0:06:12  time: 0.1057  data_time: 0.0366  memory: 975  loss: 0.6711  decode.loss_dice: 0.6711  decode.acc_seg: 100.0000
2024/02/07 17:34:09 - mmengine - INFO - Iter(train) [ 6450/10000]  lr: 1.0000e-04  eta: 0:06:07  time: 0.1060  data_time: 0.0369  memory: 975  loss: 0.7827  decode.loss_dice: 0.7827  decode.acc_seg: 100.0000
2024/02/07 17:34:15 - mmengine - INFO - Iter(train) [ 6500/10000]  lr: 1.0000e-04  eta: 0:06:02  time: 0.1178  data_time: 0.0494  memory: 975  loss: 0.9606  decode.loss_dice: 0.9606  decode.acc_seg: 100.0000
2024/02/07 17:34:21 - mmengine - INFO - Iter(train) [ 6550/10000]  lr: 1.0000e-04  eta: 0:05:57  time: 0.1243  data_time: 0.0559  memory: 975  loss: 0.7509  decode.loss_dice: 0.7509  decode.acc_seg: 100.0000
2024/02/07 17:34:27 - mmengine - INFO - Iter(train) [ 6600/10000]  lr: 1.0000e-04  eta: 0:05:52  time: 0.1283  data_time: 0.0598  memory: 975  loss: 0.7132  decode.loss_dice: 0.7132  decode.acc_seg: 100.0000
2024/02/07 17:34:33 - mmengine - INFO - Iter(train) [ 6650/10000]  lr: 1.0000e-04  eta: 0:05:47  time: 0.1029  data_time: 0.0342  memory: 975  loss: 0.9414  decode.loss_dice: 0.9414  decode.acc_seg: 100.0000
2024/02/07 17:34:38 - mmengine - INFO - Iter(train) [ 6700/10000]  lr: 1.0000e-04  eta: 0:05:42  time: 0.1325  data_time: 0.0641  memory: 975  loss: 0.8829  decode.loss_dice: 0.8829  decode.acc_seg: 100.0000
2024/02/07 17:34:44 - mmengine - INFO - Iter(train) [ 6750/10000]  lr: 1.0000e-04  eta: 0:05:37  time: 0.1197  data_time: 0.0503  memory: 975  loss: 0.8079  decode.loss_dice: 0.8079  decode.acc_seg: 100.0000
2024/02/07 17:34:51 - mmengine - INFO - Iter(train) [ 6800/10000]  lr: 1.0000e-04  eta: 0:05:33  time: 0.1197  data_time: 0.0487  memory: 975  loss: 0.6341  decode.loss_dice: 0.6341  decode.acc_seg: 100.0000
2024/02/07 17:34:56 - mmengine - INFO - Iter(train) [ 6850/10000]  lr: 1.0000e-04  eta: 0:05:28  time: 0.0989  data_time: 0.0316  memory: 975  loss: 0.8041  decode.loss_dice: 0.8041  decode.acc_seg: 100.0000
2024/02/07 17:35:03 - mmengine - INFO - Iter(train) [ 6900/10000]  lr: 1.0000e-04  eta: 0:05:23  time: 0.1405  data_time: 0.0715  memory: 975  loss: 0.7748  decode.loss_dice: 0.7748  decode.acc_seg: 100.0000
2024/02/07 17:35:09 - mmengine - INFO - Iter(train) [ 6950/10000]  lr: 1.0000e-04  eta: 0:05:18  time: 0.1136  data_time: 0.0462  memory: 975  loss: 0.6700  decode.loss_dice: 0.6700  decode.acc_seg: 100.0000
2024/02/07 17:35:15 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:35:15 - mmengine - INFO - Iter(train) [ 7000/10000]  lr: 1.0000e-04  eta: 0:05:14  time: 0.1523  data_time: 0.0837  memory: 975  loss: 0.7635  decode.loss_dice: 0.7635  decode.acc_seg: 100.0000
2024/02/07 17:35:21 - mmengine - INFO - Iter(train) [ 7050/10000]  lr: 1.0000e-04  eta: 0:05:09  time: 0.1239  data_time: 0.0550  memory: 975  loss: 0.8003  decode.loss_dice: 0.8003  decode.acc_seg: 100.0000
2024/02/07 17:35:26 - mmengine - INFO - Iter(train) [ 7100/10000]  lr: 1.0000e-04  eta: 0:05:04  time: 0.1215  data_time: 0.0536  memory: 975  loss: 0.7385  decode.loss_dice: 0.7385  decode.acc_seg: 100.0000
2024/02/07 17:35:33 - mmengine - INFO - Iter(train) [ 7150/10000]  lr: 1.0000e-04  eta: 0:04:59  time: 0.1300  data_time: 0.0616  memory: 975  loss: 0.8107  decode.loss_dice: 0.8107  decode.acc_seg: 100.0000
2024/02/07 17:35:39 - mmengine - INFO - Iter(train) [ 7200/10000]  lr: 1.0000e-04  eta: 0:04:54  time: 0.1183  data_time: 0.0504  memory: 975  loss: 0.7850  decode.loss_dice: 0.7850  decode.acc_seg: 100.0000
2024/02/07 17:35:45 - mmengine - INFO - Iter(train) [ 7250/10000]  lr: 1.0000e-04  eta: 0:04:49  time: 0.1211  data_time: 0.0516  memory: 975  loss: 0.8985  decode.loss_dice: 0.8985  decode.acc_seg: 100.0000
2024/02/07 17:35:50 - mmengine - INFO - Iter(train) [ 7300/10000]  lr: 1.0000e-04  eta: 0:04:44  time: 0.1117  data_time: 0.0416  memory: 975  loss: 0.8343  decode.loss_dice: 0.8343  decode.acc_seg: 100.0000
2024/02/07 17:35:56 - mmengine - INFO - Iter(train) [ 7350/10000]  lr: 1.0000e-04  eta: 0:04:38  time: 0.1325  data_time: 0.0635  memory: 975  loss: 0.7643  decode.loss_dice: 0.7643  decode.acc_seg: 100.0000
2024/02/07 17:36:02 - mmengine - INFO - Iter(train) [ 7400/10000]  lr: 1.0000e-04  eta: 0:04:33  time: 0.1240  data_time: 0.0565  memory: 975  loss: 0.7545  decode.loss_dice: 0.7545  decode.acc_seg: 100.0000
2024/02/07 17:36:08 - mmengine - INFO - Iter(train) [ 7450/10000]  lr: 1.0000e-04  eta: 0:04:28  time: 0.0985  data_time: 0.0296  memory: 975  loss: 0.8013  decode.loss_dice: 0.8013  decode.acc_seg: 100.0000
2024/02/07 17:36:13 - mmengine - INFO - Iter(train) [ 7500/10000]  lr: 1.0000e-04  eta: 0:04:23  time: 0.1089  data_time: 0.0401  memory: 975  loss: 0.8681  decode.loss_dice: 0.8681  decode.acc_seg: 100.0000
2024/02/07 17:36:19 - mmengine - INFO - Iter(train) [ 7550/10000]  lr: 1.0000e-04  eta: 0:04:18  time: 0.1310  data_time: 0.0620  memory: 975  loss: 0.8175  decode.loss_dice: 0.8175  decode.acc_seg: 100.0000
2024/02/07 17:36:25 - mmengine - INFO - Iter(train) [ 7600/10000]  lr: 1.0000e-04  eta: 0:04:13  time: 0.0949  data_time: 0.0267  memory: 975  loss: 0.8612  decode.loss_dice: 0.8612  decode.acc_seg: 100.0000
2024/02/07 17:36:30 - mmengine - INFO - Iter(train) [ 7650/10000]  lr: 1.0000e-04  eta: 0:04:08  time: 0.0935  data_time: 0.0256  memory: 975  loss: 0.6700  decode.loss_dice: 0.6700  decode.acc_seg: 100.0000
2024/02/07 17:36:36 - mmengine - INFO - Iter(train) [ 7700/10000]  lr: 1.0000e-04  eta: 0:04:03  time: 0.1250  data_time: 0.0558  memory: 975  loss: 0.8130  decode.loss_dice: 0.8130  decode.acc_seg: 100.0000
2024/02/07 17:36:42 - mmengine - INFO - Iter(train) [ 7750/10000]  lr: 1.0000e-04  eta: 0:03:58  time: 0.1383  data_time: 0.0699  memory: 975  loss: 0.5520  decode.loss_dice: 0.5520  decode.acc_seg: 100.0000
2024/02/07 17:36:48 - mmengine - INFO - Iter(train) [ 7800/10000]  lr: 1.0000e-04  eta: 0:03:53  time: 0.1117  data_time: 0.0428  memory: 975  loss: 0.8552  decode.loss_dice: 0.8552  decode.acc_seg: 100.0000
2024/02/07 17:36:54 - mmengine - INFO - Iter(train) [ 7850/10000]  lr: 1.0000e-04  eta: 0:03:47  time: 0.1240  data_time: 0.0555  memory: 975  loss: 0.7319  decode.loss_dice: 0.7319  decode.acc_seg: 100.0000
2024/02/07 17:37:00 - mmengine - INFO - Iter(train) [ 7900/10000]  lr: 1.0000e-04  eta: 0:03:42  time: 0.1270  data_time: 0.0596  memory: 975  loss: 0.8389  decode.loss_dice: 0.8389  decode.acc_seg: 100.0000
2024/02/07 17:37:07 - mmengine - INFO - Iter(train) [ 7950/10000]  lr: 1.0000e-04  eta: 0:03:37  time: 0.1177  data_time: 0.0492  memory: 975  loss: 0.8305  decode.loss_dice: 0.8305  decode.acc_seg: 100.0000
2024/02/07 17:37:13 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:37:13 - mmengine - INFO - Iter(train) [ 8000/10000]  lr: 1.0000e-04  eta: 0:03:32  time: 0.0957  data_time: 0.0277  memory: 975  loss: 0.8367  decode.loss_dice: 0.8367  decode.acc_seg: 100.0000
2024/02/07 17:37:19 - mmengine - INFO - Iter(train) [ 8050/10000]  lr: 1.0000e-04  eta: 0:03:27  time: 0.1138  data_time: 0.0472  memory: 975  loss: 0.7374  decode.loss_dice: 0.7374  decode.acc_seg: 100.0000
2024/02/07 17:37:24 - mmengine - INFO - Iter(train) [ 8100/10000]  lr: 1.0000e-04  eta: 0:03:22  time: 0.0946  data_time: 0.0264  memory: 975  loss: 0.8672  decode.loss_dice: 0.8672  decode.acc_seg: 100.0000
2024/02/07 17:37:31 - mmengine - INFO - Iter(train) [ 8150/10000]  lr: 1.0000e-04  eta: 0:03:17  time: 0.1352  data_time: 0.0681  memory: 975  loss: 0.6671  decode.loss_dice: 0.6671  decode.acc_seg: 100.0000
2024/02/07 17:37:35 - mmengine - INFO - Iter(train) [ 8200/10000]  lr: 1.0000e-04  eta: 0:03:11  time: 0.0883  data_time: 0.0213  memory: 975  loss: 0.8190  decode.loss_dice: 0.8190  decode.acc_seg: 100.0000
2024/02/07 17:37:40 - mmengine - INFO - Iter(train) [ 8250/10000]  lr: 1.0000e-04  eta: 0:03:06  time: 0.1121  data_time: 0.0454  memory: 975  loss: 0.8323  decode.loss_dice: 0.8323  decode.acc_seg: 100.0000
2024/02/07 17:37:47 - mmengine - INFO - Iter(train) [ 8300/10000]  lr: 1.0000e-04  eta: 0:03:01  time: 0.1339  data_time: 0.0669  memory: 975  loss: 0.8042  decode.loss_dice: 0.8042  decode.acc_seg: 100.0000
2024/02/07 17:37:52 - mmengine - INFO - Iter(train) [ 8350/10000]  lr: 1.0000e-04  eta: 0:02:55  time: 0.1070  data_time: 0.0409  memory: 975  loss: 0.6718  decode.loss_dice: 0.6718  decode.acc_seg: 100.0000
2024/02/07 17:37:57 - mmengine - INFO - Iter(train) [ 8400/10000]  lr: 1.0000e-04  eta: 0:02:50  time: 0.1046  data_time: 0.0382  memory: 975  loss: 0.8574  decode.loss_dice: 0.8574  decode.acc_seg: 100.0000
2024/02/07 17:38:04 - mmengine - INFO - Iter(train) [ 8450/10000]  lr: 1.0000e-04  eta: 0:02:45  time: 0.1198  data_time: 0.0507  memory: 975  loss: 0.9014  decode.loss_dice: 0.9014  decode.acc_seg: 100.0000
2024/02/07 17:38:09 - mmengine - INFO - Iter(train) [ 8500/10000]  lr: 1.0000e-04  eta: 0:02:40  time: 0.1088  data_time: 0.0423  memory: 975  loss: 0.8160  decode.loss_dice: 0.8160  decode.acc_seg: 100.0000
2024/02/07 17:38:15 - mmengine - INFO - Iter(train) [ 8550/10000]  lr: 1.0000e-04  eta: 0:02:34  time: 0.1181  data_time: 0.0501  memory: 975  loss: 0.8440  decode.loss_dice: 0.8440  decode.acc_seg: 100.0000
2024/02/07 17:38:20 - mmengine - INFO - Iter(train) [ 8600/10000]  lr: 1.0000e-04  eta: 0:02:29  time: 0.0898  data_time: 0.0232  memory: 975  loss: 0.8056  decode.loss_dice: 0.8056  decode.acc_seg: 100.0000
2024/02/07 17:38:25 - mmengine - INFO - Iter(train) [ 8650/10000]  lr: 1.0000e-04  eta: 0:02:24  time: 0.1033  data_time: 0.0359  memory: 975  loss: 0.8621  decode.loss_dice: 0.8621  decode.acc_seg: 100.0000
2024/02/07 17:38:31 - mmengine - INFO - Iter(train) [ 8700/10000]  lr: 1.0000e-04  eta: 0:02:18  time: 0.1565  data_time: 0.0899  memory: 975  loss: 0.8810  decode.loss_dice: 0.8810  decode.acc_seg: 100.0000
2024/02/07 17:38:35 - mmengine - INFO - Iter(train) [ 8750/10000]  lr: 1.0000e-04  eta: 0:02:13  time: 0.0877  data_time: 0.0216  memory: 975  loss: 0.7428  decode.loss_dice: 0.7428  decode.acc_seg: 100.0000
2024/02/07 17:38:41 - mmengine - INFO - Iter(train) [ 8800/10000]  lr: 1.0000e-04  eta: 0:02:07  time: 0.1123  data_time: 0.0448  memory: 975  loss: 0.8535  decode.loss_dice: 0.8535  decode.acc_seg: 100.0000
2024/02/07 17:38:46 - mmengine - INFO - Iter(train) [ 8850/10000]  lr: 1.0000e-04  eta: 0:02:02  time: 0.1147  data_time: 0.0469  memory: 975  loss: 0.7912  decode.loss_dice: 0.7912  decode.acc_seg: 100.0000
2024/02/07 17:38:51 - mmengine - INFO - Iter(train) [ 8900/10000]  lr: 1.0000e-04  eta: 0:01:57  time: 0.0768  data_time: 0.0097  memory: 975  loss: 0.7990  decode.loss_dice: 0.7990  decode.acc_seg: 100.0000
2024/02/07 17:38:57 - mmengine - INFO - Iter(train) [ 8950/10000]  lr: 1.0000e-04  eta: 0:01:51  time: 0.1383  data_time: 0.0712  memory: 975  loss: 0.7222  decode.loss_dice: 0.7222  decode.acc_seg: 100.0000
2024/02/07 17:39:02 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:39:02 - mmengine - INFO - Iter(train) [ 9000/10000]  lr: 1.0000e-04  eta: 0:01:46  time: 0.0906  data_time: 0.0240  memory: 975  loss: 0.7996  decode.loss_dice: 0.7996  decode.acc_seg: 100.0000
2024/02/07 17:39:07 - mmengine - INFO - Iter(train) [ 9050/10000]  lr: 1.0000e-04  eta: 0:01:41  time: 0.1134  data_time: 0.0463  memory: 975  loss: 0.6549  decode.loss_dice: 0.6549  decode.acc_seg: 100.0000
2024/02/07 17:39:12 - mmengine - INFO - Iter(train) [ 9100/10000]  lr: 1.0000e-04  eta: 0:01:35  time: 0.1056  data_time: 0.0396  memory: 975  loss: 0.6940  decode.loss_dice: 0.6940  decode.acc_seg: 100.0000
2024/02/07 17:39:17 - mmengine - INFO - Iter(train) [ 9150/10000]  lr: 1.0000e-04  eta: 0:01:30  time: 0.0780  data_time: 0.0119  memory: 975  loss: 0.6749  decode.loss_dice: 0.6749  decode.acc_seg: 100.0000
2024/02/07 17:39:22 - mmengine - INFO - Iter(train) [ 9200/10000]  lr: 1.0000e-04  eta: 0:01:25  time: 0.1033  data_time: 0.0354  memory: 975  loss: 0.7722  decode.loss_dice: 0.7722  decode.acc_seg: 100.0000
2024/02/07 17:39:28 - mmengine - INFO - Iter(train) [ 9250/10000]  lr: 1.0000e-04  eta: 0:01:19  time: 0.1194  data_time: 0.0521  memory: 975  loss: 0.7679  decode.loss_dice: 0.7679  decode.acc_seg: 100.0000
2024/02/07 17:39:33 - mmengine - INFO - Iter(train) [ 9300/10000]  lr: 1.0000e-04  eta: 0:01:14  time: 0.1184  data_time: 0.0524  memory: 975  loss: 0.7705  decode.loss_dice: 0.7705  decode.acc_seg: 100.0000
2024/02/07 17:39:39 - mmengine - INFO - Iter(train) [ 9350/10000]  lr: 1.0000e-04  eta: 0:01:09  time: 0.1124  data_time: 0.0459  memory: 975  loss: 0.8725  decode.loss_dice: 0.8725  decode.acc_seg: 100.0000
2024/02/07 17:39:44 - mmengine - INFO - Iter(train) [ 9400/10000]  lr: 1.0000e-04  eta: 0:01:03  time: 0.1038  data_time: 0.0375  memory: 975  loss: 0.7259  decode.loss_dice: 0.7259  decode.acc_seg: 100.0000
2024/02/07 17:39:48 - mmengine - INFO - Iter(train) [ 9450/10000]  lr: 1.0000e-04  eta: 0:00:58  time: 0.1016  data_time: 0.0353  memory: 975  loss: 0.6549  decode.loss_dice: 0.6549  decode.acc_seg: 100.0000
2024/02/07 17:39:54 - mmengine - INFO - Iter(train) [ 9500/10000]  lr: 1.0000e-04  eta: 0:00:53  time: 0.1285  data_time: 0.0605  memory: 975  loss: 0.7817  decode.loss_dice: 0.7817  decode.acc_seg: 100.0000
2024/02/07 17:40:00 - mmengine - INFO - Iter(train) [ 9550/10000]  lr: 1.0000e-04  eta: 0:00:47  time: 0.1091  data_time: 0.0418  memory: 975  loss: 0.8633  decode.loss_dice: 0.8633  decode.acc_seg: 100.0000
2024/02/07 17:40:05 - mmengine - INFO - Iter(train) [ 9600/10000]  lr: 1.0000e-04  eta: 0:00:42  time: 0.1239  data_time: 0.0568  memory: 975  loss: 0.6649  decode.loss_dice: 0.6649  decode.acc_seg: 100.0000
2024/02/07 17:40:12 - mmengine - INFO - Iter(train) [ 9650/10000]  lr: 1.0000e-04  eta: 0:00:37  time: 0.1079  data_time: 0.0408  memory: 975  loss: 0.7668  decode.loss_dice: 0.7668  decode.acc_seg: 100.0000
2024/02/07 17:40:17 - mmengine - INFO - Iter(train) [ 9700/10000]  lr: 1.0000e-04  eta: 0:00:32  time: 0.1271  data_time: 0.0606  memory: 975  loss: 0.8111  decode.loss_dice: 0.8111  decode.acc_seg: 100.0000
2024/02/07 17:40:22 - mmengine - INFO - Iter(train) [ 9750/10000]  lr: 1.0000e-04  eta: 0:00:26  time: 0.1114  data_time: 0.0454  memory: 975  loss: 0.8477  decode.loss_dice: 0.8477  decode.acc_seg: 100.0000
2024/02/07 17:40:27 - mmengine - INFO - Iter(train) [ 9800/10000]  lr: 1.0000e-04  eta: 0:00:21  time: 0.1141  data_time: 0.0482  memory: 975  loss: 0.6425  decode.loss_dice: 0.6425  decode.acc_seg: 100.0000
2024/02/07 17:40:32 - mmengine - INFO - Iter(train) [ 9850/10000]  lr: 1.0000e-04  eta: 0:00:15  time: 0.0975  data_time: 0.0312  memory: 975  loss: 0.7506  decode.loss_dice: 0.7506  decode.acc_seg: 100.0000
2024/02/07 17:40:37 - mmengine - INFO - Iter(train) [ 9900/10000]  lr: 1.0000e-04  eta: 0:00:10  time: 0.0919  data_time: 0.0255  memory: 975  loss: 0.7131  decode.loss_dice: 0.7131  decode.acc_seg: 100.0000
2024/02/07 17:40:43 - mmengine - INFO - Iter(train) [ 9950/10000]  lr: 1.0000e-04  eta: 0:00:05  time: 0.1157  data_time: 0.0484  memory: 975  loss: 0.7120  decode.loss_dice: 0.7120  decode.acc_seg: 100.0000
2024/02/07 17:40:48 - mmengine - INFO - Exp name: unet-s5-d16_fcn-noaux_4xb4-220k_cbis-ddsm-mono-256x256_20240207_172240
2024/02/07 17:40:48 - mmengine - INFO - Iter(train) [10000/10000]  lr: 1.0000e-04  eta: 0:00:00  time: 0.0965  data_time: 0.0301  memory: 975  loss: 0.8773  decode.loss_dice: 0.8773  decode.acc_seg: 100.0000
2024/02/07 17:40:48 - mmengine - INFO - Saving checkpoint at 10000 iterations
2024/02/07 17:40:48 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2024/02/07 17:40:52 - mmengine - INFO - Iter(val) [ 50/246]    eta: 0:00:15  time: 0.0545  data_time: 0.0124  memory: 833  
2024/02/07 17:40:56 - mmengine - INFO - Iter(val) [100/246]    eta: 0:00:10  time: 0.1031  data_time: 0.0635  memory: 1021  
2024/02/07 17:41:00 - mmengine - INFO - Iter(val) [150/246]    eta: 0:00:07  time: 0.0825  data_time: 0.0424  memory: 896  
2024/02/07 17:41:05 - mmengine - INFO - Iter(val) [200/246]    eta: 0:00:03  time: 0.0895  data_time: 0.0403  memory: 922  
2024/02/07 17:41:08 - mmengine - INFO - per class results:
2024/02/07 17:41:08 - mmengine - INFO - 
+-------+-------+-------+--------+-----------+--------+
| Class |  IoU  |  Acc  | Fscore | Precision | Recall |
+-------+-------+-------+--------+-----------+--------+
|  roi  | 13.19 | 34.57 |  19.8  |    21.4   | 34.57  |
+-------+-------+-------+--------+-----------+--------+
2024/02/07 17:41:08 - mmengine - INFO - Iter(val) [246/246]    aAcc: 34.5700  mIoU: 13.1900  mAcc: 34.5700  mFscore: 19.8000  mPrecision: 21.4000  mRecall: 34.5700  data_time: 0.0361  time: 0.0823
